{"version":3,"sources":["../../src/components/Root.tsx","../../src/index.tsx","App.tsx","index.tsx"],"names":["Container","styled","ChartContainer","TitleRoot","TitleBase","TitleLeft","TitleRight","H1","H2","Axis","Grid","Row","Cell","fadeIn","keyframes","LabelText","ExpandButtonRow","ExpandButton","Arrow","BarCell","RangeBase","RangeLeft","RangeRight","Bar","AxisValue","AxisLeft","AxisText","AxisLine","AxisTitle","roundUpToHalf","value","roundedUp","Math","previousHalfValue","Category","Root","props","onRowHover","useState","gridHeight","chartWidth","rootRef","useRef","chartRef","useEffect","setMeasurements","offsetWidth","updateWindowWidth","debounce","window","orderedPrimaryData","orderBy","primaryData","orderedSecondaryData","secondaryData","primaryTop","secondaryTop","primaryMax","secondaryMax","totalRange","secondaryRange","primaryRange","totalValues","totalTopValues","rowHeight","rows","ref","i","isRowVisible","expanded","nValuesToShow","category","style","height","backgroundColor","hoveredId","d","undefined","pointerEvents","label","React","leftBar","width","rightBar","onMouseMove","e","setHoveredId","datum","mouseCoords","x","y","clientY","key","id","axisIncrement","totalValuesLeftOfZero","totalValuesRightOfZero","axisValuesLeft","formatted","formatValue","axisValuesRight","line","axisTitle","axisLabel","h1Left","titles","h2Left","h1Right","h2Right","expandCollapseButtonText","expandCollapseText","onMouseLeave","gridTemplateRows","top","onClick","setExpanded","current","onMouseEnter","colorMap","color","naicsData","JSON","parse","bostonTotal","bostonData","forEach","naics_id","num_employ","industry","find","topLevelParentId","toString","parent_id","parseInt","console","error","Error","parentColor","c","push","title","name","newYorkTotal","newYorkData","sharesDataBoston","newYorkDatum","ny","difference","sharesDataNewYork","bostonDatum","bost","div","Tooltip","TooltipTitle","TooltipSubsectionGrid","SemiBold","span","ArrowContainer","parseFloat","toFixed","App","tooltip","hovered","setHovered","newYorkValue","bostonValue","nyDiff","bosDiff","left","rgba","primary","h1","h2","secondary","toExpand","toCollapse","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.65d62613.chunk.js","sourcesContent":["import React, {useState, useRef, useEffect} from 'react';\nimport styled, {keyframes} from 'styled-components/macro';\nimport orderBy from 'lodash/orderBy';\nimport debounce from 'lodash/debounce';\n\nconst titleHeight = 120; // in px\nconst overflowPadding = 1; // in rem. Needed to allow for final axis value to remain visible\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  padding-top: ${titleHeight}px;\n  padding-right: ${overflowPadding}rem;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  box-sizing: border-box;\n  position: relative;\n  overflow: hidden;\n`;\n\nconst ChartContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  display: grid;\n  grid-template-rows: 1fr 2rem;\n`;\n\nconst TitleRoot = styled.div`\n  margin-left: auto;\n  display: flex;\n  height: ${titleHeight}px;\n  position: absolute;\n  top: 0;\n  right: 0;\n  font-size: clamp(0.5rem, 2vw, 0.95rem);\n  padding-right: ${overflowPadding}rem;\n`;\n\nconst TitleBase = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  box-sizing: border-box;\n`;\n\nconst TitleLeft = styled(TitleBase)`\n  border-right: solid 1px #333;\n  align-items: flex-end;\n  padding-right: 1.5rem;\n`;\n\nconst TitleRight = styled(TitleBase)`\n  border-left: solid 1px #333;\n  padding-left: 1.5rem;\n`;\n\nconst H1 = styled.h1`\n  font-size: inherit;\n  text-transform: uppercase;\n  margin: 0;\n  font-weight: 400;\n`;\nconst H2 = styled.h2`\n  font-size: inherit;\n  margin: 0;\n  font-weight: 400;\n`;\n\nconst Axis = styled.div`\n  margin-left: auto;\n  display: flex;\n  border-top: solid 2px #333;\n`;\n\nconst Grid = styled.div`\n  width: 100%;\n  height: 100%;\n  grid-row: 1;\n  display: grid;\n  grid-template-columns: clamp(150px, 300px, 25%) 2rem 1fr;\n  position: relative;\n  /* both auto and overlay required for browsers that don't support overlay */\n  overflow: auto;\n  overflow-y: overlay;\n  overflow-x: hidden\n\n  ::-webkit-scrollbar {\n    -webkit-appearance: none;\n    width: 7px;\n  }\n  ::-webkit-scrollbar-thumb {\n    border-radius: 4px;\n    background-color: rgba(0, 0, 0, .3);\n  }\n  ::-webkit-scrollbar-track {\n    background-color: rgba(0, 0, 0, .1);\n  }\n`;\n\nconst Row = styled.div`\n  display: contents;\n`;\nconst Cell = styled.div`\n  transition: all 0.3s ease;\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n`;\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n`;\n\nconst LabelText = styled.div`\n  width: 100%;\n  font-size: clamp(0.65rem, 2vh, 0.85rem);\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  text-align: right;\n  opacity: 0;\n  animation: ${fadeIn} 0.15s linear 1 forwards 0.3s;\n`;\n\nconst ExpandButtonRow = styled.div`\n  grid-column: 1 / -1;\n  pointer-events: none;\n  position: sticky;\n  height: 0;\n  display: flex;\n`;\n\nconst ExpandButton = styled.button`\n  pointer-events: all;\n  margin-left: auto;\n  border: none;\n  background-color: transparent;\n  font-size: 1rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  font-size: clamp(0.45rem, 1.25vw, 0.85rem);\n  text-shadow:\n   -1px -1px 0 #fff,  \n    1px -1px 0 #fff,\n    -1px 1px 0 #fff,\n     1px 1px 0 #fff;\n  transform: translate(0, 1rem);\n\n  &:focus:not(:focus-visible) {\n    outline: none;\n  }\n`;\n\nconst Arrow = styled.span`\n  font-size: 1.2rem;\n  font-weight: 600;\n  margin-right: 0.4rem;\n  transform: translate(0, -0.1rem)\n`;\n\nconst BarCell = styled(Cell)`\n  display: flex;\n`;\n\nconst RangeBase = styled.div`\n  height: 100%;\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n`;\n\nconst RangeLeft = styled(RangeBase)`\n  border-right: solid 1px #333;\n  justify-content: flex-end;\n`;\n\nconst RangeRight = styled(RangeBase)`\n  border-left: solid 1px #333;\n`;\n\nconst Bar = styled.div`\n  height: 70%;\n`;\n\nconst AxisValue = styled.div`\n  display: flex;\n  flex-shrink: 0;\n`;\n\nconst AxisLeft = styled(AxisValue)`\n  justify-content: flex-end;\n`;\n\nconst AxisText = styled.span`\n  transform: translate(-50%, 0);\n  font-size: clamp(0.65rem, 2vw, 1rem);\n`;\n\nconst AxisLine = styled.div`\n  position: absolute;\n  top: 0;\n  height: calc(100% - 2rem);\n  width: 0;\n  border-right: solid 1px #dfdfdf;\n`;\n\nconst AxisTitle = styled.div`\n  position: absolute;\n  right: 0;\n  z-index: 1;\n  font-size: clamp(0.95rem, 2.5vw, 1.1rem);\n  transform: translate(0, -100%);\n  display: flex;\n  justify-content: flex-end;\n  padding: 0 0 0.3rem 1rem;\n  box-sizing: border-box;\n  pointer-events: none;\n`;\n\nexport interface BarDatum {\n  id: string,\n  title: string,\n  value: number,\n  color: string,\n}\n\nexport interface RowHoverEvent {\n  datum: BarDatum | undefined;\n  mouseCoords: {x: number, y: number};\n}\n\nexport interface Props {\n  primaryData: BarDatum[];\n  secondaryData: BarDatum[];\n  nValuesToShow: number;\n  formatValue?: (value: number) => string | number;\n  titles?: {\n    primary?: {\n      h1: string,\n      h2?: string,\n    }\n    secondary?: {\n      h1: string,\n      h2?: string,\n    }\n  }\n  expandCollapseText?: {\n    toExpand: string,\n    toCollapse: string,\n  }\n  axisLabel?: string;\n  onRowHover?: (event: RowHoverEvent) => void;\n}\n\nconst roundUpToHalf = (value: number) => {\n  const roundedUp = Math.ceil(value);\n  const previousHalfValue = roundedUp - 0.5;\n  if (previousHalfValue <= value) {\n    return roundedUp;\n  } else {\n    return previousHalfValue;\n  }\n}\n\nenum Category {\n  Primary,\n  Secondary,\n}\n\ninterface Measurements {\n  gridHeight: number,\n  chartWidth: number,\n}\n\nconst Root = (props: Props) => {\n  const {\n    primaryData, secondaryData, nValuesToShow, formatValue, titles, expandCollapseText, axisLabel,\n    onRowHover,\n  } = props;\n\n  const [expanded, setExpanded] = useState<boolean>(false);\n  const [hoveredId, setHoveredId] = useState<BarDatum['id'] | undefined>(undefined); \n  const [{gridHeight, chartWidth}, setMeasurements] = useState<Measurements>({gridHeight: 0, chartWidth: 0});\n  const rootRef = useRef<HTMLDivElement | null>(null);\n  const chartRef = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    if (rootRef && rootRef.current && chartRef && chartRef.current) {\n      setMeasurements({gridHeight: rootRef.current.offsetHeight, chartWidth: chartRef.current.offsetWidth});\n    }\n  }, [rootRef, chartRef])\n\n  useEffect(() => {\n    const updateWindowWidth = debounce(() => {\n      if (rootRef && rootRef.current && chartRef && chartRef.current) {\n        setMeasurements({gridHeight: rootRef.current.offsetHeight, chartWidth: chartRef.current.offsetWidth});\n      }\n    }, 10);\n    window.addEventListener('resize', updateWindowWidth);\n    return () => {\n      window.removeEventListener('resize', updateWindowWidth);\n    };\n  }, []);\n\n  const orderedPrimaryData = orderBy(primaryData, ['value'], 'desc');\n  const orderedSecondaryData = orderBy(secondaryData, ['value'], 'desc');\n  const primaryTop = orderedPrimaryData.slice(0, nValuesToShow);\n  const secondaryTop = orderedSecondaryData.slice(0, nValuesToShow);\n\n  const primaryMax = roundUpToHalf(primaryTop[0].value);\n  const secondaryMax = roundUpToHalf(secondaryTop[0].value);\n  const totalRange = primaryMax + secondaryMax;\n  const secondaryRange = secondaryMax / totalRange * 100\n  const primaryRange = primaryMax / totalRange * 100\n\n  const totalValues = primaryData.length + secondaryData.length;\n  const totalTopValues = primaryTop.length + secondaryTop.length;\n  const rowHeight = gridHeight ? (1 / totalTopValues) * gridHeight : 0;\n\n  const rows = [...orderedPrimaryData, ...orderedSecondaryData.reverse()].map((d, i) => {\n    const ref = i === 0 ? chartRef : undefined;\n    const isRowVisible = expanded || (i < nValuesToShow || i > totalValues - (nValuesToShow + 1));\n    const category: Category = i < orderedPrimaryData.length ? Category.Primary : Category.Secondary;\n    const style: React.CSSProperties = isRowVisible ? {\n      height: rowHeight,\n      // opacity: 1,\n      backgroundColor: hoveredId === d.id ? '#f1f1f1' : undefined,\n    } : {\n      height: 0,\n      // opacity: 0,\n      pointerEvents: 'none',\n    };\n    const label = isRowVisible ? (\n      <LabelText>{d.title}</LabelText>\n    ) : null;\n    const leftBar = category === Category.Secondary ? (\n      <Bar style={{backgroundColor: d.color, width: `${d.value / secondaryMax * 100}%`}} />\n    ) : null;\n    const rightBar = category === Category.Primary ? (\n      <Bar style={{backgroundColor: d.color, width: `${d.value / primaryMax * 100}%`}} />\n    ) : null;\n    const onMouseMove = (e: React.MouseEvent) => {\n      setHoveredId(d.id);\n      if (onRowHover) {\n        onRowHover({\n          datum: d,\n          mouseCoords: {\n            x: e.clientX,\n            y: e.clientY,\n          },\n        })\n      }\n    }\n    return (\n      <Row\n        key={d.id}\n      >\n        <Cell\n          style={style}\n          onMouseMove={onMouseMove}\n        >\n          {label}\n        </Cell>\n        <Cell style={style} />\n        <BarCell\n          style={style}\n          ref={ref}\n          onMouseMove={onMouseMove}\n        >\n          <RangeLeft style={{width: `${secondaryRange}%`}}>\n            {leftBar}\n          </RangeLeft>\n          <RangeRight style={{width: `${primaryRange}%`}}>\n            {rightBar}\n          </RangeRight>\n        </BarCell>\n      </Row>\n    );\n  })\n\n  const totalAxisValues = 11;\n  const axisIncrement = totalRange / totalAxisValues;\n  const totalValuesLeftOfZero = Math.round(secondaryMax / totalRange * totalAxisValues);\n  const totalValuesRightOfZero = totalAxisValues - totalValuesLeftOfZero;\n  const axisValuesLeft: React.ReactElement<any>[] = [];\n\n  for (let i = 1; i < totalValuesLeftOfZero + 1; i++) {\n    const value = axisIncrement * i;\n    if (value <= secondaryMax) {\n      const formatted = formatValue ? formatValue(value) : value;\n      axisValuesLeft.push(\n        <AxisValue\n          key={'axis-value-' + i}\n          style={{width: chartWidth / totalAxisValues}}\n        >\n          <AxisLine />\n          <AxisText>\n            {formatted}\n          </AxisText>\n        </AxisValue>\n      );\n    }\n  }\n\n  const axisValuesRight: React.ReactElement<any>[] = [];\n  for (let i = 0; i < totalValuesRightOfZero + 1; i++) {\n    const line = i !== 0 ? <AxisLine /> : null;\n    const value = axisIncrement * i;\n    if (value <= primaryMax) {\n      const formatted = formatValue ? formatValue(value) : value;\n      axisValuesRight.push(\n        <AxisValue\n          key={'axis-value-' + i}\n          style={{width: chartWidth / totalAxisValues}}\n        >\n          {line}\n          <AxisText>\n            {formatted}\n          </AxisText>\n        </AxisValue>\n      );\n    }\n  }\n\n  const axisTitle = axisLabel\n    ? <AxisTitle style={{width: (primaryRange / 100) * chartWidth}}>{axisLabel}</AxisTitle>\n    : null;\n\n  const h1Left = titles && titles.secondary ? (\n    <H1>{titles.secondary.h1}</H1>\n  ) : null;\n  const h2Left = titles && titles.secondary && titles.secondary.h2 ? (\n    <H2>{titles.secondary.h2}</H2>\n  ) : null;\n  const h1Right = titles && titles.primary ? (\n    <H1>{titles.primary.h1}</H1>\n  ) : null;\n  const h2Right = titles && titles.primary && titles.primary.h2 ? (\n    <H2>{titles.primary.h2}</H2>\n  ) : null;\n\n  let expandCollapseButtonText: string;\n  if (expanded) {\n    expandCollapseButtonText = expandCollapseText ? expandCollapseText.toCollapse : 'Collapse';\n  } else {\n    expandCollapseButtonText = expandCollapseText ? expandCollapseText.toExpand : 'Expand';\n  }\n\n  const onMouseLeave = (e: React.MouseEvent) => {\n    setHoveredId(undefined);\n    if (onRowHover) {\n      onRowHover({\n        datum: undefined,\n        mouseCoords: {\n          x: e.clientX,\n          y: e.clientY,\n        },\n      })\n    }\n  }\n\n  return (\n    <Container>\n      <TitleRoot style={{width: chartWidth}}>\n        <TitleLeft style={{width: `${secondaryRange}%`}}>\n          <div>\n            {h1Left}\n            {h2Left}\n          </div>\n        </TitleLeft>\n        <TitleRight style={{width: `${primaryRange}%`}}>\n          <div>\n            {h1Right}\n            {h2Right}\n          </div>\n        </TitleRight>\n      </TitleRoot>\n      <ChartContainer>\n        <Axis style={{width: chartWidth}}>\n          <AxisLeft style={{width: `${secondaryRange}%`}}>\n            {axisValuesLeft.reverse()}\n          </AxisLeft>\n          <AxisValue style={{width: `${primaryRange}%`}}>\n            {axisValuesRight}\n          </AxisValue>\n          {axisTitle}\n        </Axis>\n        <Grid\n          ref={rootRef}\n          style={{gridTemplateRows: 'repeat(${totalValues}, auto)'}}\n          onMouseLeave={onMouseLeave}\n        >\n          <ExpandButtonRow\n            style={{top: (gridHeight / 2)}}\n          >\n            <ExpandButton\n              onClick={() => setExpanded(current => !current)}\n              onMouseEnter={onMouseLeave}\n            >\n              <Arrow>↕</Arrow> {expandCollapseButtonText}\n            </ExpandButton>\n          </ExpandButtonRow>\n          {rows}\n        </Grid>\n      </ChartContainer>\n    </Container>\n  );\n}\n\nexport default Root;\n","import React from 'react'\nimport Root, {\n  Props as ComparisonBarChartProps,\n  BarDatum,\n  RowHoverEvent,\n} from './components/Root'\n\nconst ComparisonBarChart = (props: ComparisonBarChartProps) => {\n  return (\n    <Root {...props} />\n  );\n}\n\nexport {\n  ComparisonBarChartProps,\n  BarDatum,\n  RowHoverEvent,\n}\n\nexport default ComparisonBarChart;\n","import React, {useState} from 'react';\nimport ComparisonBarChart, {\n  BarDatum,\n  RowHoverEvent,\n} from 'react-comparison-bar-chart';\nimport styled from 'styled-components/macro';\nimport raw from 'raw.macro';\nimport {rgba} from 'polished';\n\nconst colorMap = [\n  { id: '0', color: '#A973BE' },\n  { id: '1', color: '#F1866C' },\n  { id: '2', color: '#FFC135' },\n  { id: '3', color: '#93CFD0' },\n  { id: '4', color: '#488098' },\n  { id: '5', color: '#77C898' },\n  { id: '6', color: '#6A6AAD' },\n  { id: '7', color: '#D35162' },\n  { id: '8', color: '#F28188' },\n]\n\ninterface NaicsDatum {\n  naics_id: number,\n  code: string,\n  name: string,\n  level: number,\n  parent_id: number | null,\n  parent_code: string | null,\n  code_hierarchy: string,\n  naics_id_hierarchy: string,\n}\n\nconst naicsData: NaicsDatum[] = JSON.parse(raw('./data/naics_2017.json'));\n\nlet bostonTotal = 0;\nconst bostonData: BarDatum[] = [];\nJSON.parse(raw('./data/boston-3digit-shares.json'))\n  .forEach(({naics_id, num_employ}: {naics_id: number, num_employ: number}) => {\n    const industry = naicsData.find(d => d.naics_id === naics_id);\n    let topLevelParentId: string = naics_id.toString();\n    let current: NaicsDatum | undefined = naicsData.find(datum => datum.naics_id === naics_id);\n    while(current && current.parent_id !== null) {\n      // eslint-disable-next-line\n      current = naicsData.find(datum => datum.naics_id === (current as NaicsDatum).parent_id);\n      if (current && current.parent_id !== null) {\n        topLevelParentId = current.parent_id.toString();\n      } else if (current && current.naics_id !== null) {\n        topLevelParentId = current.naics_id.toString();\n      }\n    }\n    if (parseInt(topLevelParentId, 10) > 8) {\n      console.error(current);\n      throw new Error('Parent out of range')\n    }\n    const parentColor = colorMap.find(c => c.id === topLevelParentId);\n    if (industry && parentColor) {\n      bostonTotal += num_employ;\n      bostonData.push({\n        id: naics_id.toString(),\n        title: industry.name,\n        value: num_employ,\n        color: parentColor.color,\n      })\n    }\n  });\n\nlet newYorkTotal = 0;\nconst newYorkData: BarDatum[] = [];\nJSON.parse(raw('./data/newyork-3digit-shares.json'))\n  .forEach(({naics_id, num_employ}: {naics_id: number, num_employ: number}) => {\n    const industry = naicsData.find(d => d.naics_id === naics_id);\n    let topLevelParentId: string = naics_id.toString();\n    let current: NaicsDatum | undefined = naicsData.find(datum => datum.naics_id === naics_id);\n    while(current && current.parent_id !== null) {\n      // eslint-disable-next-line\n      current = naicsData.find(datum => datum.naics_id === (current as NaicsDatum).parent_id);\n      if (current && current.parent_id !== null) {\n        topLevelParentId = current.parent_id.toString();\n      } else if (current && current.naics_id !== null) {\n        topLevelParentId = current.naics_id.toString();\n      }\n    }\n    if (parseInt(topLevelParentId, 10) > 8) {\n      console.error(current);\n      throw new Error('Parent out of range')\n    }\n    const parentColor = colorMap.find(c => c.id === topLevelParentId);\n    if (industry && parentColor) {\n      newYorkTotal += num_employ;\n      newYorkData.push({\n        id: naics_id.toString(),\n        title: industry.name,\n        value: num_employ,\n        color: parentColor.color,\n      })\n    }\n  });\n\nconst sharesDataBoston: BarDatum[] = [];\nbostonData.forEach(d => {\n  const newYorkDatum = newYorkData.find(ny => ny.id === d.id);\n  const bostonShare = d.value / bostonTotal;\n  const newYorkShare = newYorkDatum ? newYorkDatum.value / newYorkTotal : 0;\n  const difference = bostonShare - newYorkShare;\n  if (difference > 0) {\n    sharesDataBoston.push({...d, value: difference * 100})\n  }\n});\nconst sharesDataNewYork: BarDatum[] = [];\nnewYorkData.forEach(d => {\n  const bostonDatum = bostonData.find(bost => bost.id === d.id);\n  const newYorkShare = d.value / newYorkTotal;\n  const bostonShare = bostonDatum ? bostonDatum.value / bostonTotal : 0;\n  const difference = newYorkShare - bostonShare;\n  if (difference > 0) {\n    sharesDataNewYork.push({...d, value: difference * 100})\n  }\n});\n\nconst Root = styled.div`\n  width: 100vw;\n  height: 100vh;\n  box-sizing: border-box;\n  padding: 3rem;\n`;\n\nconst Tooltip = styled.div`\n  position: fixed;\n  z-index: 3000;\n  max-width: 16rem;\n  padding-bottom: 0.5rem;\n  font-size: 0.7rem;\n  line-height: 1.4;\n  text-transform: none;\n  transition: opacity 0.15s ease;\n  color: #333;\n  background-color: #fff;\n  border: 1px solid #dfdfdf;\n  border-radius: 4px;\n  box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.15);\n  pointer-events: none;\n  transform: translate(-50%, calc(-100% - 1.5rem));\n`;\n\nconst TooltipTitle = styled.div`\n  padding: 0.5rem;\n`;\n\nconst TooltipSubsectionGrid = styled.div`\n  display: grid;\n  grid-template-columns: auto auto auto;\n  grid-gap: 0.5rem;\n  padding: 0.5rem;\n`;\n\nconst SemiBold = styled.span`\n  font-weight: 500;\n  display: flex;\n  justify-content: flex-end;\n  text-align: right;\n`;\nconst Cell = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  text-align: right;\n`;\n\nconst ArrowContainer = styled.div`\n  width: 100%;\n  height: 0.5rem;\n  display: flex;\n  justify-content: center;\n  position: absolute;\n  transform: translate(0, 100%);\n`;\n\nconst Arrow = styled.div`\n  width: 0.5rem;\n  height: 0.5rem;\n  position: relative;\n  display: flex;\n  justify-content: center;\n  left: -0.25rem;\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    border-left: 9px solid transparent;\n    border-right: 9px solid transparent;\n    border-top: 9px solid #dfdfdf;\n  }\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 1px;\n    border-left: 8px solid transparent;\n    border-right: 8px solid transparent;\n    border-top: 8px solid #fff;\n  }\n`;\n\nconst formatValue = (value: number) => {\n  return parseFloat((value).toFixed(1)) + '%';\n}\n\nconst App = () => {\n  const [hovered, setHovered] = useState<RowHoverEvent | undefined>(undefined);\n\n  let tooltip: React.ReactElement<any> | null;\n  if (hovered && hovered.datum) {\n    const {datum, mouseCoords} = hovered;\n    const bostonDatum = bostonData.find(d => d.id === datum.id);\n    const newYorkDatum = newYorkData.find(d => d.id === datum.id);\n    const newYorkValue = newYorkDatum ? newYorkDatum.value / newYorkTotal * 100 : 0;\n    const bostonValue = bostonDatum ? bostonDatum.value / bostonTotal * 100 : 0;\n    const nyDiff = newYorkValue > bostonValue ? '+' + datum.value.toFixed(2) + '%' : '';\n    const bosDiff = bostonValue > newYorkValue ? '+' + datum.value.toFixed(2) + '%' : '';\n    tooltip = (\n      <Tooltip\n        style={{left: mouseCoords.x, top: mouseCoords.y}}\n      >\n        <TooltipTitle style={{backgroundColor: rgba(datum.color, 0.3)}}>\n          {datum.title}\n        </TooltipTitle>\n        <TooltipSubsectionGrid>\n          <div />\n          <SemiBold>New York</SemiBold>\n          <SemiBold>Boston</SemiBold>\n          <Cell>Share of Employees</Cell>\n          <SemiBold>{newYorkValue.toFixed(2) + '%'}</SemiBold>\n          <SemiBold>{bostonValue.toFixed(2) + '%'}</SemiBold>\n          <Cell>Difference</Cell>\n          <SemiBold>{nyDiff}</SemiBold>\n          <SemiBold>{bosDiff}</SemiBold>\n        </TooltipSubsectionGrid>\n        <ArrowContainer>\n          <Arrow />\n        </ArrowContainer>\n      </Tooltip>\n    );\n  } else {\n    tooltip = null;\n  }\n\n  return (\n    <Root>\n      <ComparisonBarChart\n        primaryData={sharesDataBoston}\n        secondaryData={sharesDataNewYork}\n        nValuesToShow={10}\n        formatValue={formatValue}\n        titles={{\n          primary: {\n            h1: 'Positive Boston Share (%) (Top 10)',\n            h2: 'Boston > New York',\n          },\n          secondary: {\n            h1: 'Positive New York Share (%) (Top 10)',\n            h2: 'New York > Boston',\n          }\n        }}\n        expandCollapseText={{\n          toExpand: 'Click to see all industries',\n          toCollapse: 'Show only top industries',\n        }}\n        axisLabel={'Difference in Share'}\n        onRowHover={e => setHovered(e)}\n      />\n      {tooltip}\n    </Root>\n  )\n}\n\nexport default App;\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}