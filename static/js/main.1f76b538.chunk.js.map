{"version":3,"sources":["../../src/components/Utils.ts","../../src/components/Row.tsx","../../src/components/Root.tsx","../../src/index.tsx","components/BostonNewYork3Digit.tsx","components/rapidTooltip.ts","components/BostonAracaju6Digit.tsx","components/BostonAracaju2Digit.tsx","components/BostonAracaju1Digit.tsx","components/BostonAracajuServicesOnly.tsx","App.tsx","index.tsx"],"names":["Layout","Category","fadeIn","keyframes","highlightedIdName","Root","styled","LabelText","Cell","BarCell","RangeBase","RangeLeft","RangeRight","Bar","React","props","i","d","expanded","totalRightValues","totalLeftValues","rowHeight","totalValues","gridHeight","orderedRightData","rightMax","leftMax","onRowHover","leftRange","rightRange","layout","highlighted","chartWidth","textWidth","isRowVisible","category","style","height","backgroundColor","undefined","pointerEvents","transitionDelay","label","className","textAlign","leftBar","width","rightBar","onMouseMove","e","datum","mouseCoords","x","y","clientY","onMouseLeave","id","Container","ChartContainer","ChartBlock","TitleRoot","AxisLines","TitleBase","TitleLeft","TitleRight","H1","H2","Grid","ExpandButtonRow","ButtonContainer","ExpandButton","Arrow","AxisValue","AxisText","AxisLine","AxisTitle","roundUpToHalf","value","roundedUp","Math","previousHalfValue","primaryData","secondaryData","nValuesToShow","formatValue","titles","expandCollapseText","axisLabel","hideExpandCollapseButton","initialExpanded","onExpandCollapseButtonHover","onHighlightError","leftData","rightData","useState","setExpanded","setMeasurements","rootRef","useRef","textRef","chartRef","useEffect","chartRect","textRect","updateWindowWidth","window","highlightedElm","rootNode","highlightedRect","behavior","scrollToElm","setTimeout","orderBy","orderedLeftData","rightTop","leftTop","rightTopValue","leftTopValue","rawTotalRange","axisIncrement","totalRange","totalTopValues","rows","key","length","totalAxisValues","totalValuesLeftOfZero","totalValuesRightOfZero","axisFontSize","axisWidth","axisLines","formatted","axisTitle","right","titleFormatter","titleLeft","titleRight","h1Left","h2Left","h1Right","h2Right","expandCollapseButtonText","expandCollapseButton","onClick","current","dangerouslySetInnerHTML","__html","buffer","paddingRight","overflowPadding","paddingLeft","visibility","marginLeft","left","ref","gridTemplateRows","gridTemplateColumns","overflow","top","colorMap","color","naicsData","JSON","parse","bostonTotal","bostonData","forEach","naics_id","num_employ","industry","find","topLevelParentId","toString","parent_id","parseInt","console","error","Error","parentColor","c","push","title","name","newYorkTotal","newYorkData","sharesDataBoston","newYorkDatum","ny","difference","sharesDataNewYork","bostonDatum","bost","div","Tooltip","TooltipTitle","TooltipSubsectionGrid","SemiBold","span","ArrowContainer","Input","input","parseFloat","toFixed","BostonNewYork3Digit","tooltip","setValue","setHighlighted","hovered","setHovered","newYorkValue","bostonValue","nyDiff","bosDiff","rgba","primary","secondary","format","count","max","countText","toExpand","toCollapse","v","alert","Left","onSubmit","preventDefault","onChange","target","RapidTooltipRoot","getStandardTooltip","columnCount","r","row","alignment","boldColumns","includes","filteredPrimaryData","filteredSecondaryData","secondaryDatum","d2","primaryDatum","tooltipRef","node","secondaryValue","primaryValue","primaryDiff","secondaryDiff","innerHTML","display","App","exact","path","component","BostonAracaju6Digit","BostonAracaju2Digit","BostonAracaju1Digit","BostonAracajuServicesOnly","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1f76b538.chunk.js","sourcesContent":["import {keyframes} from 'styled-components/macro';\n\nexport interface WithDyanmicFont {\n  $dynamicFont: string; // should be value of clamp\n}\n\nexport interface BarDatum {\n  id: string,\n  title: string,\n  value: number,\n  color: string,\n}\n\nexport enum Category {\n  Primary,\n  Secondary,\n}\n\nexport interface RowHoverEvent {\n  datum: BarDatum | undefined;\n  mouseCoords: {x: number, y: number};\n}\n\nexport enum Layout {\n  Left = 'left',\n  Right = 'right',\n}\n\nexport const fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components/macro';\nimport {\n  WithDyanmicFont,\n  BarDatum,\n  Category,\n  RowHoverEvent,\n  Layout,\n  fadeIn,\n} from './Utils';\n\nexport const highlightedIdName = 'react-comparison-bar-chart-highlighted-item';\n\nconst Root = styled.div`\n  display: flex;\n\n  &:hover {\n    background-color: #f1f1f1;\n  }\n`;\n\nconst LabelText = styled.div<WithDyanmicFont>`\n  width: 100%;\n  font-size: ${({$dynamicFont}) => $dynamicFont};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  opacity: 0;\n  animation: ${fadeIn} 0.15s linear 1 forwards 0.3s;\n`;\n\nexport const Cell = styled.div`\n  transition: height 0.3s ease-in-out;\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n`;\n\nconst BarCell = styled(Cell)`\n  display: flex;\n`;\n\nconst RangeBase = styled.div`\n  height: 100%;\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n`;\n\nconst RangeLeft = styled(RangeBase)`\n  border-right: solid 1px #333;\n  justify-content: flex-end;\n`;\n\nconst RangeRight = styled(RangeBase)`\n  border-left: solid 1px #333;\n`;\n\nconst Bar = styled.div`\n  height: 70%;\n  transition: width 0.2s ease-in-out;\n`;\n\ninterface Props {\n  i: number;\n  d: BarDatum;\n  expanded: boolean;\n  totalRightValues: number;\n  totalLeftValues: number;\n  totalValues: number;\n  rowHeight: number;\n  orderedRightData: BarDatum[];\n  gridHeight: number;\n  rightMax: number;\n  leftMax: number;\n  onRowHover: undefined | ((event: RowHoverEvent) => void);\n  leftRange: number;\n  rightRange: number;\n  layout: Layout | undefined;\n  highlighted: string | undefined;\n  chartWidth: number;\n  textWidth: number;\n}\n\nconst Row = (props: Props) => {\n  const {\n    i, d, expanded, totalRightValues, totalLeftValues, rowHeight, totalValues, gridHeight,\n    orderedRightData, rightMax, leftMax, onRowHover,\n    leftRange, rightRange, layout, highlighted, chartWidth, textWidth,\n  } = props;\n\n  \n  const isRowVisible = expanded || (i < totalRightValues || i > totalValues - (totalLeftValues + 1));\n  const category: Category = i < orderedRightData.length ? Category.Primary : Category.Secondary;\n  const style: React.CSSProperties = isRowVisible ? {\n    height: rowHeight,\n    backgroundColor: highlighted === d.id ? '#f1f1f1' : undefined,\n  } : {\n    height: 0,\n    pointerEvents: 'none',\n    transitionDelay: !highlighted ? '0.15s' : undefined,\n  };\n  const label = isRowVisible ? (\n    <LabelText\n      className={'react-comparison-bar-chart-row-label'}\n      style={{\n        textAlign: layout === Layout.Right ? 'left' : 'right',\n      }}\n      $dynamicFont={`clamp(0.5rem, ${gridHeight * 0.04}px, 0.9rem)`}\n    >\n      {d.title}\n    </LabelText>\n  ) : null;\n  const leftBar = category === Category.Secondary ? (\n    <Bar\n      className={'react-comparison-bar-chart-bar react-comparison-bar-chart-bar-left'}\n      style={{\n        backgroundColor: d.color,\n        width: isRowVisible ? `${d.value / leftMax * 100}%` : 0,\n        transitionDelay: isRowVisible && !highlighted ? '0.3s' : undefined,\n      }}\n    />\n  ) : null;\n  const rightBar = category === Category.Primary ? (\n    <Bar\n      className={'react-comparison-bar-chart-bar react-comparison-bar-chart-bar-right'}\n      style={{\n        backgroundColor: d.color,\n        width: isRowVisible ? `${d.value / rightMax * 100}%` : 0,\n        transitionDelay: isRowVisible && !highlighted ? '0.3s' : undefined,\n      }}\n    />\n  ) : null;\n  const onMouseMove = (e: React.MouseEvent) => {\n    if (onRowHover) {\n      onRowHover({\n        datum: d,\n        mouseCoords: {\n          x: e.clientX,\n          y: e.clientY,\n        },\n      })\n    }\n  }\n\n  const onMouseLeave = (e: React.MouseEvent) => {\n    if (onRowHover) {\n      onRowHover({\n        datum: undefined,\n        mouseCoords: {\n          x: e.clientX,\n          y: e.clientY,\n        },\n      })\n    }\n  }\n\n  if (layout === Layout.Right) {\n    return (\n      <Root>\n        <BarCell\n          id={highlighted === d.id ? highlightedIdName : undefined}\n          style={{...style, width: chartWidth}}\n          onMouseMove={onMouseMove}\n          onMouseLeave={onMouseLeave}\n        >\n          <RangeLeft style={{width: `${leftRange}%`}}>\n            {leftBar}\n          </RangeLeft>\n          <RangeRight style={{width: `${rightRange}%`}}>\n            {rightBar}\n          </RangeRight>\n        </BarCell>\n        <Cell\n          style={{...style, width: '2rem'}}\n          onMouseMove={onMouseMove}\n          onMouseLeave={onMouseLeave}\n        />\n        <Cell\n          style={{...style, width: textWidth}}\n          onMouseMove={onMouseMove}\n          onMouseLeave={onMouseLeave}\n        >\n          {label}\n        </Cell>\n      </Root>\n    );\n  } else {\n    return (\n      <Root>\n        <Cell\n          style={{...style, width: textWidth}}\n          onMouseMove={onMouseMove}\n          onMouseLeave={onMouseLeave}\n        >\n          {label}\n        </Cell>\n        <Cell\n          style={{...style, width: '2rem'}}\n          onMouseMove={onMouseMove}\n          onMouseLeave={onMouseLeave}\n        />\n        <BarCell\n          id={highlighted === d.id ? highlightedIdName : undefined}\n          style={{...style, width: chartWidth}}\n          onMouseMove={onMouseMove}\n          onMouseLeave={onMouseLeave}\n        >\n          <RangeLeft style={{width: `${leftRange}%`}}>\n            {leftBar}\n          </RangeLeft>\n          <RangeRight style={{width: `${rightRange}%`}}>\n            {rightBar}\n          </RangeRight>\n        </BarCell>\n      </Root>\n    );\n  }\n\n}\n\nexport default React.memo(Row);\n","import React, {useState, useRef, useEffect} from 'react';\nimport styled from 'styled-components/macro';\nimport orderBy from 'lodash/orderBy';\nimport raw from 'raw.macro';\nimport Row, {Cell, highlightedIdName} from './Row';\nimport {\n  WithDyanmicFont,\n  BarDatum,\n  RowHoverEvent,\n  Layout,\n  fadeIn,\n} from './Utils';\n\nconst ArrowCollapseSVG = raw('../assets/arrow-collapse.svg');\nconst ArrowExpandSVG = raw('../assets/arrow-expand.svg');\n\nconst titleHeight = 80; // in px\nconst overflowPadding = 1; // in rem. Needed to allow for final axis value to remain visible\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  padding-top: ${titleHeight}px;\n  padding-bottom: 2rem;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  box-sizing: border-box;\n  position: relative;\n  overflow: hidden;\n`;\n\nconst ChartContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  /* makes this element the relative parent for position: fixed children */\n  will-change: transform;\n`;\n\nconst ChartBlock = styled.div`\n  grid-column: 1 / -1;\n  width: 100%;\n`;\n\nconst TitleRoot = styled.div<WithDyanmicFont>`\n  margin-left: auto;\n  display: flex;\n  height: ${titleHeight}px;\n  position: absolute;\n  top: 0;\n  font-size: ${({$dynamicFont}) => $dynamicFont};\n`;\n\nconst AxisLines = styled.div`\n  position: absolute;\n  top: ${titleHeight}px;\n  width: 100%;\n  display: flex;\n`;\n\nconst TitleBase = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  box-sizing: border-box;\n`;\n\nconst TitleLeft = styled(TitleBase)`\n  border-right: solid 1px #333;\n  align-items: flex-end;\n  padding-right: 1.5rem;\n`;\n\nconst TitleRight = styled(TitleBase)`\n  border-left: solid 1px #333;\n  padding-left: 1.5rem;\n`;\n\nconst H1 = styled.h1`\n  font-size: inherit;\n  text-transform: uppercase;\n  margin: 0;\n  font-weight: 400;\n`;\nconst H2 = styled.h2`\n  font-size: inherit;\n  margin: 0;\n  font-weight: 400;\n`;\n\nconst Grid = styled.div`\n  width: 100%;\n  height: 100%;\n  grid-row: 1;\n  display: grid;\n  position: relative;\n  /* both auto and overlay required for browsers that don't support overlay */\n  overflow: auto;\n  overflow-y: overlay;\n  overflow-x: hidden\n\n  ::-webkit-scrollbar {\n    -webkit-appearance: none;\n    width: 7px;\n  }\n  ::-webkit-scrollbar-thumb {\n    border-radius: 4px;\n    background-color: rgba(0, 0, 0, .3);\n  }\n  ::-webkit-scrollbar-track {\n    background-color: rgba(0, 0, 0, .1);\n  }\n`;\n\nconst ExpandButtonRow = styled.div`\n  grid-column: 1 / -1;\n  pointer-events: none;\n  position: sticky;\n  right: 0;\n  height: 0;\n`;\n\nconst ButtonContainer = styled.div`\n  width: 100%;\n  pointer-events: none;\n  display: flex;\n`;\n\nconst ExpandButton = styled.button<WithDyanmicFont & {$dynamicMaxWidth: string}>`\n  pointer-events: all;\n  margin-left: auto;\n  border: none;\n  background-color: transparent;\n  text-align: left;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  font-size: ${({$dynamicFont}) => $dynamicFont};\n  max-width: ${({$dynamicMaxWidth}) => $dynamicMaxWidth};\n  text-shadow:\n   -1px -1px 0 #fff,  \n    1px -1px 0 #fff,\n    -1px 1px 0 #fff,\n     1px 1px 0 #fff;\n  transform: translate(0, 1rem);\n  opacity: 0;\n  animation: ${fadeIn} 0.1s linear 1 forwards;\n\n  &:focus:not(:focus-visible) {\n    outline: none;\n  }\n\n  &:active {\n    color: #333;\n  }\n`;\n\nconst Arrow = styled.span`\n  width: 1rem;\n  height: 1rem;\n  margin-left: 0.5rem;\n\n  svg {\n    width: 100%;\n    height: 100%;\n\n    .cls-1 {\n      fill: none;\n      stroke: #2d2d2d;\n      stroke-miterlimit: 10;\n      stroke-width: 0.94px;\n    }\n\n    .cls-2 {\n      fill: #2d2d2d;\n    }\n  }\n\n`;\n\nconst AxisValue = styled.div`\n  display: flex;\n  flex-shrink: 0;\n  background-color: #fff;\n  position: relative;\n  pointer-events: none;\n\n\n  &:after {\n    content: '';\n    width: 100%;\n    height: 0;\n    position: absolute;\n    bottom: 0;\n  }\n\n  &:not(:last-child) {\n    &:after {\n      border-bottom: solid 2px #333;\n      z-index: 10;\n    }\n  }\n\n  :last-child {\n    &:after {\n      border-bottom: solid 2px transparent;\n    }\n  }\n`;\n\nconst AxisText = styled.span<WithDyanmicFont>`\n  font-size: ${({$dynamicFont}) => $dynamicFont};\n  transform: translate(-50%, calc(100% + 4px));\n  position: absolute;\n  bottom: 0;\n`;\n\nconst AxisLine = styled.div`\n  position: absolute;\n  top: 0;\n  height: 100%;\n  width: 0;\n  border-left: solid 1px #dfdfdf;\n`;\n\nconst AxisTitle = styled.div<WithDyanmicFont>`\n  position: absolute;\n  bottom: 0;\n  z-index: 1;\n  font-size: ${({$dynamicFont}) => $dynamicFont};\n  padding: 0 0 0.3rem 1rem;\n  box-sizing: border-box;\n  pointer-events: none;\n  transform: translate(-1rem, 0);\n`;\n\nexport interface Props {\n  primaryData: BarDatum[];\n  secondaryData: BarDatum[];\n  nValuesToShow: number;\n  formatValue?: (value: number) => string | number;\n  titles?: {\n    primary: string;\n    secondary: string;\n    format?: (label: string, count: number, max: number) => string;\n  }\n  expandCollapseText?: {\n    toExpand: string,\n    toCollapse: string,\n  }\n  axisLabel?: string;\n  onRowHover?: (event: RowHoverEvent) => void;\n  hideExpandCollapseButton?: boolean;\n  initialExpanded?: boolean;\n  layout?: Layout;\n  highlighted?: string;\n  onExpandCollapseButtonHover?: (event: React.MouseEvent<HTMLElement>) => void;\n  onHighlightError?: (value: string) => void;\n}\n\nconst roundUpToHalf = (value: number) => {\n  const roundedUp = Math.ceil(value);\n  const previousHalfValue = roundedUp - 0.5;\n  if (previousHalfValue <= value) {\n    return roundedUp;\n  } else {\n    return previousHalfValue;\n  }\n}\n\ninterface Measurements {\n  gridHeight: number,\n  chartWidth: number,\n  textWidth: number,\n}\n\nconst Root = (props: Props) => {\n  const {\n    primaryData, secondaryData, nValuesToShow, formatValue, titles, expandCollapseText,\n    axisLabel, onRowHover, hideExpandCollapseButton, initialExpanded, layout, highlighted,\n    onExpandCollapseButtonHover, onHighlightError,\n  } = props;\n\n  if (!primaryData.length && !secondaryData.length) {\n    return null;\n  }\n\n  const leftData = layout === Layout.Right ? primaryData : secondaryData;\n  const rightData = layout === Layout.Right ? secondaryData : primaryData;\n\n  const [expanded, setExpanded] = useState<boolean>(initialExpanded ? true : false);\n  const [{gridHeight, chartWidth, textWidth}, setMeasurements] = useState<Measurements>({\n    gridHeight: 0, chartWidth: 0, textWidth: 0\n  });\n  const rootRef = useRef<HTMLDivElement | null>(null);\n  const textRef = useRef<HTMLDivElement | null>(null);\n  const chartRef = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    if (rootRef && rootRef.current && chartRef && chartRef.current && textRef && textRef.current) {\n      const chartRect = chartRef.current.getBoundingClientRect();\n      const textRect = textRef.current.getBoundingClientRect();\n      setMeasurements({\n        gridHeight: rootRef.current.offsetHeight, chartWidth: chartRect.width, textWidth: textRect.width,\n      });\n    }\n  }, [rootRef, chartRef])\n\n  useEffect(() => {\n    const updateWindowWidth = () => {\n      if (rootRef && rootRef.current && chartRef && chartRef.current && textRef && textRef.current) {\n        const chartRect = chartRef.current.getBoundingClientRect();\n        const textRect = textRef.current.getBoundingClientRect();\n        setMeasurements({\n          gridHeight: rootRef.current.offsetHeight, chartWidth: chartRect.width, textWidth: textRect.width,\n        });\n      }\n    };\n    window.addEventListener('resize', updateWindowWidth);\n    return () => {\n      window.removeEventListener('resize', updateWindowWidth);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (rootRef && rootRef.current && highlighted !== undefined) {\n      const rootNode = rootRef.current;\n      const highlightedElm: HTMLElement | null = rootNode.querySelector(`#${highlightedIdName}`);\n      if (highlightedElm) {\n        const highlightedRect = highlightedElm.getBoundingClientRect();\n        if (highlightedRect.height > 5) { // > arbitrary number in case function is triggered during animation\n          highlightedElm.scrollIntoView({behavior: \"smooth\"});\n        } else {\n          setExpanded(true)\n          const scrollToElm = () => {\n            setTimeout(() => {\n              highlightedElm.scrollIntoView({behavior: \"smooth\"});\n              highlightedElm.removeEventListener('transitionend', scrollToElm)\n            }, 250);\n          }\n          highlightedElm.addEventListener('transitionend', scrollToElm)\n        }\n      } else if (onHighlightError) {\n        onHighlightError(highlighted);\n      }\n    }\n  }, [rootRef, highlighted]);\n\n  const orderedRightData = orderBy(rightData, ['value'], 'desc');\n  const orderedLeftData = orderBy(leftData, ['value'], 'desc');\n\n  const rightTop = orderedRightData.slice(0, nValuesToShow);\n  const leftTop = orderedLeftData.slice(0, nValuesToShow);\n\n  let rightTopValue = rightTop.length ? rightTop[0].value : 0;\n  let leftTopValue = leftTop.length ? leftTop[0].value : 0;\n  if (!rightTopValue) {\n    rightTopValue = leftTopValue;\n  }\n  if (!leftTopValue) {\n    leftTopValue = rightTopValue;\n  }\n  if (!leftTopValue && !rightTopValue) {\n    rightTopValue = 1;\n    leftTopValue = 1;\n  }\n\n  const rawTotalRange = rightTopValue + leftTopValue;\n  let rightMax: number;\n  let leftMax: number;\n  let axisIncrement: number;\n  if (rawTotalRange < 7) {\n    rightMax = roundUpToHalf(rightTopValue);\n    leftMax = roundUpToHalf(leftTopValue);\n    axisIncrement = 0.5;\n  } else if (rawTotalRange < 14) {\n    rightMax = Math.ceil(rightTopValue);\n    leftMax = Math.ceil(leftTopValue);\n    axisIncrement = 1;\n  } else if (rawTotalRange < 21) {\n    rightMax = 2 * Math.ceil(rightTopValue / 2);\n    leftMax = 2 * Math.ceil(leftTopValue / 2);\n    axisIncrement = 2;\n  } else {\n    rightMax = 3 * Math.ceil(rightTopValue / 3);\n    leftMax = 3 * Math.ceil(leftTopValue / 3);\n    axisIncrement = 3;\n  }\n\n  const totalRange = rightMax + leftMax;\n  const leftRange = leftMax / totalRange * 100\n  const rightRange = rightMax / totalRange * 100\n\n  const totalValues = rightData.length + leftData.length;\n  const totalTopValues = rightTop.length + leftTop.length;\n  const rowHeight = gridHeight ? ((1 / totalTopValues) * gridHeight) : 0;\n\n  const rows = [...orderedRightData, ...orderedLeftData.reverse()].map((d, i) => {\n    return (\n      <Row\n        key={d.id}\n        i={i}\n        d={d}\n        expanded={expanded}\n        totalRightValues={rightTop.length}\n        totalLeftValues={leftTop.length}\n        totalValues={totalValues}\n        rowHeight={rowHeight}\n        orderedRightData={orderedRightData}\n        gridHeight={gridHeight}\n        rightMax={rightMax}\n        leftMax={leftMax}\n        onRowHover={onRowHover}\n        leftRange={leftRange}\n        rightRange={rightRange}\n        layout={layout}\n        highlighted={highlighted}\n        textWidth={textWidth}\n        chartWidth={chartWidth}\n      />\n    );\n  })\n\n  if (layout === Layout.Right) {\n    rows.reverse();\n  }\n\n  const totalAxisValues = totalRange / axisIncrement;\n  const totalValuesLeftOfZero = Math.round((leftRange / 100) * totalAxisValues);\n  const totalValuesRightOfZero = totalAxisValues - totalValuesLeftOfZero;\n\n  let axisFontSize: string;\n  if (chartWidth < gridHeight) {\n    axisFontSize = `clamp(0.55rem, ${chartWidth * 0.025}px, 1rem)`;\n  } else {\n    axisFontSize = `clamp(0.55rem, ${gridHeight * 0.025}px, 1rem)`;\n  }\n  const axisWidth = chartWidth / totalAxisValues;\n\n  const axisLines: React.ReactElement<any>[] = [];\n  for (let i = totalValuesLeftOfZero + 1; i > 0; i--) {\n    const value = axisIncrement * i;\n    if (value <= leftMax) {\n      const formatted = formatValue ? formatValue(value) : value;\n      axisLines.push(\n        <AxisValue\n          key={'axis-line-left-' + i}\n          style={{width: axisWidth}}\n          className={'react-comparison-bar-chart-axis-value'}\n        >\n          <AxisText\n            $dynamicFont={axisFontSize}\n          >\n            {formatted}\n          </AxisText>\n          <AxisLine />\n        </AxisValue>\n      );\n    }\n  }\n\n  for (let i = 0; i < totalValuesRightOfZero + 1; i++) {\n    const value = axisIncrement * i;\n    if (value <= rightMax) {\n      const formatted = formatValue ? formatValue(value) : value;\n      axisLines.push(\n        <AxisValue\n          key={'axis-line-right-' + i}\n          style={{width: axisWidth}}\n          className={'react-comparison-bar-chart-axis-value'}\n        >\n          <AxisText\n            $dynamicFont={axisFontSize}\n          >\n            {formatted}\n          </AxisText>\n          <AxisLine />\n        </AxisValue>\n      );\n    }\n  }\n\n  const axisTitle = axisLabel ? (\n    <AxisTitle\n      style={{\n        width: layout !== Layout.Right ? (rightRange / 100) * chartWidth : (leftRange / 100) * chartWidth,\n        right: layout !== Layout.Right ? 0 : undefined,\n        textAlign: layout !== Layout.Right ? 'right' : undefined,\n      }}\n      className={'react-comparison-bar-chart-axis-title'}\n      $dynamicFont={`clamp(0.75rem, ${chartWidth * 0.025}px, 1.1rem)`}\n    >\n      {axisLabel}\n    </AxisTitle>\n  ) : null;\n\n  const titleFormatter = titles && titles.format ? titles.format : (label: string) => label;\n\n  let titleLeft: string | undefined;\n  let titleRight: string | undefined;\n  if (layout === Layout.Right) {\n    titleLeft = titles && titles.primary ? titles.primary : undefined;\n    titleRight = titles && titles.secondary ? titles.secondary : undefined;\n  } else {\n    titleLeft = titles && titles.secondary ? titles.secondary : undefined;\n    titleRight = titles && titles.primary ? titles.primary : undefined;\n  }\n\n  const h1Left = titleLeft ? (\n    <H1>{titleFormatter(titleLeft, leftTop.length, orderedLeftData.length)}</H1>\n  ) : null;\n  const h2Left = titleLeft && titleRight ? (\n    <H2>{titleLeft} {'>'} {titleRight}</H2>\n  ) : null;\n  const h1Right = titles && titleRight ? (\n    <H1>{titleFormatter(titleRight, rightTop.length, orderedRightData.length)}</H1>\n  ) : null;\n  const h2Right = titleLeft && titleRight ? (\n    <H2>{titleRight} {'>'} {titleLeft}</H2>\n  ) : null;\n\n  let expandCollapseButtonText: string;\n  if (expanded) {\n    expandCollapseButtonText = expandCollapseText ? expandCollapseText.toCollapse : 'Collapse';\n  } else {\n    expandCollapseButtonText = expandCollapseText ? expandCollapseText.toExpand : 'Expand';\n  }\n\n  const expandCollapseButton = hideExpandCollapseButton ||\n    (rightTop.length < nValuesToShow && leftTop.length < nValuesToShow)\n    ? null : (\n      <ButtonContainer>\n        <ExpandButton\n          onClick={() => setExpanded(current => !current)}\n          className={'react-comparison-bar-chart-expand-button'}\n          style={{\n          }}\n          $dynamicFont={`clamp(0.7rem, ${chartWidth * 0.015}px, 0.85rem)`}\n          $dynamicMaxWidth={chartWidth > 300 ? `${chartWidth * 0.25}px` : '75px'}\n          onMouseMove={onExpandCollapseButtonHover}\n        >\n          <Arrow\n            dangerouslySetInnerHTML={{__html: expanded ? ArrowCollapseSVG : ArrowExpandSVG}}\n          /> {expandCollapseButtonText}\n        </ExpandButton>\n      </ButtonContainer>\n    );\n\n    const buffer: React.CSSProperties = layout !== Layout.Right\n      ? {paddingRight: overflowPadding + 'rem'} : {paddingLeft: overflowPadding + 'rem'};\n\n  return (\n    <Container\n      style={{...buffer}}\n      className={'react-comparison-bar-chart-root-container'}\n    >\n      <TitleRoot\n        style={{\n          width: chartWidth,\n          visibility: chartWidth ? undefined : 'hidden',\n          marginLeft: layout !== Layout.Right ? undefined : 0,\n          right: layout !== Layout.Right ? 0 : undefined,\n          left: layout !== Layout.Right ? undefined : 0,\n          ...buffer,\n        }}\n        $dynamicFont={`clamp(0.65rem, ${chartWidth * 0.023}px, 0.87rem)`}\n      >\n        <TitleLeft style={{width: `${leftRange}%`}}>\n          <div className={'react-comparison-bar-chart-title react-comparison-bar-chart-title-left'}>\n            {h1Left}\n            {h2Left}\n          </div>\n        </TitleLeft>\n        <TitleRight style={{width: `${rightRange}%`}}>\n          <div className={'react-comparison-bar-chart-title react-comparison-bar-chart-title-right'}>\n            {h1Right}\n            {h2Right}\n          </div>\n        </TitleRight>\n        <AxisLines style={{height: gridHeight}}>\n          {axisTitle}\n          {axisLines}\n        </AxisLines>\n      </TitleRoot>\n      <ChartContainer>\n        <Grid\n          ref={rootRef}\n          style={{\n            gridTemplateRows: 'repeat(${totalValues}, auto)',\n            gridTemplateColumns: layout !== Layout.Right\n              ? 'clamp(75px, 300px, 15%) 2rem 1fr'\n              : '1fr 2rem clamp(75px, 300px, 15%)',\n            overflow: expanded ? undefined : 'hidden',\n          }}\n          className={'react-comparison-bar-chart-grid'}\n        >\n          <ExpandButtonRow\n            style={{\n              top: (gridHeight / 2),\n              width: layout !== Layout.Right ? undefined : chartWidth,\n              visibility: chartWidth ? undefined : 'hidden',\n            }}\n            className={'react-comparison-bar-chart-expand-button-container'}\n          >\n            {expandCollapseButton}\n          </ExpandButtonRow>\n          <Cell\n            ref={layout !== Layout.Right ? textRef : chartRef}\n          />\n          <Cell />\n          <Cell\n            ref={layout !== Layout.Right ? chartRef : textRef}\n          />\n          <ChartBlock>\n            {rows}\n          </ChartBlock>\n        </Grid>\n      </ChartContainer>\n    </Container>\n  );\n}\n\nexport default Root;\n","import React from 'react'\nimport Root, {\n  Props as ComparisonBarChartProps,\n} from './components/Root';\nimport {\n  BarDatum,\n  RowHoverEvent,\n  Layout,\n} from './components/Utils';\n\nconst ComparisonBarChart = (props: ComparisonBarChartProps) => {\n  return (\n    <Root {...props} />\n  );\n}\n\nexport {\n  ComparisonBarChartProps,\n  BarDatum,\n  RowHoverEvent,\n  Layout,\n}\n\nexport default ComparisonBarChart;\n","import React, {useState} from 'react';\nimport ComparisonBarChart, {\n  BarDatum,\n  RowHoverEvent,\n  Layout,\n} from 'react-comparison-bar-chart';\nimport styled from 'styled-components/macro';\nimport raw from 'raw.macro';\nimport {rgba} from 'polished';\n\nconst colorMap = [\n  { id: '0', color: '#A973BE' },\n  { id: '1', color: '#F1866C' },\n  { id: '2', color: '#FFC135' },\n  { id: '3', color: '#93CFD0' },\n  { id: '4', color: '#488098' },\n  { id: '5', color: '#77C898' },\n  { id: '6', color: '#6A6AAD' },\n  { id: '7', color: '#D35162' },\n  { id: '8', color: '#F28188' },\n]\n\ninterface NaicsDatum {\n  naics_id: number,\n  code: string,\n  name: string,\n  level: number,\n  parent_id: number | null,\n  parent_code: string | null,\n  code_hierarchy: string,\n  naics_id_hierarchy: string,\n}\n\nconst naicsData: NaicsDatum[] = JSON.parse(raw('../data/naics_2017.json'));\n\nlet bostonTotal = 0;\nconst bostonData: BarDatum[] = [];\nJSON.parse(raw('../data/boston-3digit-shares.json'))\n  .forEach(({naics_id, num_employ}: {naics_id: number, num_employ: number}) => {\n    const industry = naicsData.find(d => d.naics_id === naics_id);\n    let topLevelParentId: string = naics_id.toString();\n    let current: NaicsDatum | undefined = naicsData.find(datum => datum.naics_id === naics_id);\n    while(current && current.parent_id !== null) {\n      // eslint-disable-next-line\n      current = naicsData.find(datum => datum.naics_id === (current as NaicsDatum).parent_id);\n      if (current && current.parent_id !== null) {\n        topLevelParentId = current.parent_id.toString();\n      } else if (current && current.naics_id !== null) {\n        topLevelParentId = current.naics_id.toString();\n      }\n    }\n    if (parseInt(topLevelParentId, 10) > 8) {\n      console.error(current);\n      throw new Error('Parent out of range')\n    }\n    const parentColor = colorMap.find(c => c.id === topLevelParentId);\n    if (industry && parentColor) {\n      bostonTotal += num_employ;\n      bostonData.push({\n        id: naics_id.toString(),\n        title: industry.name,\n        value: num_employ,\n        color: parentColor.color,\n      })\n    }\n  });\n\nlet newYorkTotal = 0;\nconst newYorkData: BarDatum[] = [];\nJSON.parse(raw('../data/newyork-3digit-shares.json'))\n  .forEach(({naics_id, num_employ}: {naics_id: number, num_employ: number}) => {\n    const industry = naicsData.find(d => d.naics_id === naics_id);\n    let topLevelParentId: string = naics_id.toString();\n    let current: NaicsDatum | undefined = naicsData.find(datum => datum.naics_id === naics_id);\n    while(current && current.parent_id !== null) {\n      // eslint-disable-next-line\n      current = naicsData.find(datum => datum.naics_id === (current as NaicsDatum).parent_id);\n      if (current && current.parent_id !== null) {\n        topLevelParentId = current.parent_id.toString();\n      } else if (current && current.naics_id !== null) {\n        topLevelParentId = current.naics_id.toString();\n      }\n    }\n    if (parseInt(topLevelParentId, 10) > 8) {\n      console.error(current);\n      throw new Error('Parent out of range')\n    }\n    const parentColor = colorMap.find(c => c.id === topLevelParentId);\n    if (industry && parentColor) {\n      newYorkTotal += num_employ;\n      newYorkData.push({\n        id: naics_id.toString(),\n        title: industry.name,\n        value: num_employ,\n        color: parentColor.color,\n      })\n    }\n  });\n\nconst sharesDataBoston: BarDatum[] = [];\nbostonData.forEach(d => {\n  const newYorkDatum = newYorkData.find(ny => ny.id === d.id);\n  const bostonShare = d.value / bostonTotal;\n  const newYorkShare = newYorkDatum ? newYorkDatum.value / newYorkTotal : 0;\n  const difference = bostonShare - newYorkShare;\n  if (difference > 0) {\n    sharesDataBoston.push({...d, value: difference * 100})\n  }\n});\nconst sharesDataNewYork: BarDatum[] = [];\nnewYorkData.forEach(d => {\n  const bostonDatum = bostonData.find(bost => bost.id === d.id);\n  const newYorkShare = d.value / newYorkTotal;\n  const bostonShare = bostonDatum ? bostonDatum.value / bostonTotal : 0;\n  const difference = newYorkShare - bostonShare;\n  if (difference > 0) {\n    sharesDataNewYork.push({...d, value: difference * 100})\n  }\n});\n\nconst Root = styled.div`\n  width: 100vw;\n  height: 100vh;\n  box-sizing: border-box;\n  padding: 3rem;\n\n  @media (max-width: 720px) {\n    padding: 0.75rem;\n  }\n`;\n\nconst Tooltip = styled.div`\n  position: fixed;\n  z-index: 3000;\n  max-width: 16rem;\n  padding-bottom: 0.5rem;\n  font-size: 0.7rem;\n  line-height: 1.4;\n  text-transform: none;\n  transition: opacity 0.15s ease;\n  color: #333;\n  background-color: #fff;\n  border: 1px solid #dfdfdf;\n  border-radius: 4px;\n  box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.15);\n  pointer-events: none;\n  transform: translate(-50%, calc(-100% - 1.5rem));\n`;\n\nconst TooltipTitle = styled.div`\n  padding: 0.5rem;\n`;\n\nconst TooltipSubsectionGrid = styled.div`\n  display: grid;\n  grid-template-columns: auto auto auto;\n  grid-gap: 0.5rem;\n  padding: 0.5rem;\n`;\n\nconst SemiBold = styled.span`\n  font-weight: 500;\n  display: flex;\n  justify-content: flex-end;\n  text-align: right;\n`;\nconst Cell = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  text-align: right;\n`;\n\nconst ArrowContainer = styled.div`\n  width: 100%;\n  height: 0.5rem;\n  display: flex;\n  justify-content: center;\n  position: absolute;\n  transform: translate(0, 100%);\n`;\n\nconst Arrow = styled.div`\n  width: 0.5rem;\n  height: 0.5rem;\n  position: relative;\n  display: flex;\n  justify-content: center;\n  left: -0.25rem;\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    border-left: 9px solid transparent;\n    border-right: 9px solid transparent;\n    border-top: 9px solid #dfdfdf;\n  }\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 1px;\n    border-left: 8px solid transparent;\n    border-right: 8px solid transparent;\n    border-top: 8px solid #fff;\n  }\n`;\n\nconst Input = styled.input`\n  position: absolute;\n  top: 0;\n  left: 0;\n`;\n\nconst formatValue = (value: number) => {\n  return parseFloat((value).toFixed(1)) + '%';\n}\n\nconst BostonNewYork3Digit = () => {\n  const [value, setValue] = useState<string>('');\n  const [highlighted, setHighlighted] = useState<string | undefined>(undefined);\n  const [hovered, setHovered] = useState<RowHoverEvent | undefined>(undefined);\n\n  let tooltip: React.ReactElement<any> | null;\n  if (hovered && hovered.datum) {\n    const {datum, mouseCoords} = hovered;\n    const bostonDatum = bostonData.find(d => d.id === datum.id);\n    const newYorkDatum = newYorkData.find(d => d.id === datum.id);\n    const newYorkValue = newYorkDatum ? newYorkDatum.value / newYorkTotal * 100 : 0;\n    const bostonValue = bostonDatum ? bostonDatum.value / bostonTotal * 100 : 0;\n    const nyDiff = newYorkValue > bostonValue ? '+' + datum.value.toFixed(2) + '%' : '';\n    const bosDiff = bostonValue > newYorkValue ? '+' + datum.value.toFixed(2) + '%' : '';\n    tooltip = (\n      <Tooltip\n        style={{left: mouseCoords.x, top: mouseCoords.y}}\n      >\n        <TooltipTitle style={{backgroundColor: rgba(datum.color, 0.3)}}>\n          {datum.title}\n        </TooltipTitle>\n        <TooltipSubsectionGrid>\n          <div />\n          <SemiBold>New York</SemiBold>\n          <SemiBold>Boston</SemiBold>\n          <Cell>Share of Employees</Cell>\n          <SemiBold>{newYorkValue.toFixed(2) + '%'}</SemiBold>\n          <SemiBold>{bostonValue.toFixed(2) + '%'}</SemiBold>\n          <Cell>Difference</Cell>\n          <SemiBold>{nyDiff}</SemiBold>\n          <SemiBold>{bosDiff}</SemiBold>\n        </TooltipSubsectionGrid>\n        <ArrowContainer>\n          <Arrow />\n        </ArrowContainer>\n      </Tooltip>\n    );\n  } else {\n    tooltip = null;\n  }\n\n  const titleFormatter = (label: string, count: number, max: number) => {\n    const countText = count === max ? '' : `(Top ${count})`;\n    return `Positive ${label} share (%) ${countText}`;\n  }\n\n  const onSubmit = (e: any) => {\n    e.preventDefault();\n    setHighlighted(value.length ? value : undefined);\n  }\n\n  return (\n    <Root>\n      <ComparisonBarChart\n        primaryData={sharesDataBoston}\n        secondaryData={sharesDataNewYork}\n        nValuesToShow={10}\n        formatValue={formatValue}\n        titles={{\n          primary: 'Boston Boston',\n          secondary: 'New Yorkyorkyork',\n          format: titleFormatter,\n        }}\n        expandCollapseText={{\n          toExpand: 'Click to see all industries',\n          toCollapse: 'Show only top industries',\n        }}\n        axisLabel={'Difference in Share'}\n        onRowHover={e => setHovered(e)}\n        highlighted={highlighted}\n        onHighlightError={v => alert('Could not find ' + v)}\n        layout={Layout.Left}\n      />\n      {tooltip}\n      <form\n        onSubmit={onSubmit}\n      >\n        <Input\n          value={value}\n          onChange={e => setValue(e.target.value)}\n        />\n      </form>\n    </Root>\n  )\n}\n\nexport default BostonNewYork3Digit;\n","import styled from 'styled-components/macro';\n\ninterface Input {\n  title: string;\n  color: string;\n  rows: string[][];\n  boldColumns?: number[];\n}\n\nexport const RapidTooltipRoot = styled.div`\n  position: fixed;\n  z-index: 3000;\n  max-width: 16rem;\n  padding-bottom: 0.5rem;\n  font-size: 0.7rem;\n  line-height: 1.4;\n  text-transform: none;\n  transition: opacity 0.15s ease;\n  color: #333;\n  background-color: #fff;\n  border: 1px solid #dfdfdf;\n  border-radius: 4px;\n  box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.15);\n  pointer-events: none;\n  transform: translate(-50%, calc(-100% - 1.5rem));\n  display: none;\n`;\n\nexport const getStandardTooltip = (input: Input) => {\n  const columnCount = input.rows.length && input.rows[0].length ? input.rows[0].length : 1;\n\n  let rows: string = '';\n  input.rows.forEach(r => {\n    let row = '';\n    r.forEach((c, i) => {\n      const alignment = i === 0\n        ? 'justify-content: flex-start; text-align: left;'\n        : 'justify-content: flex-end; text-align: right;';\n      const style = input.boldColumns && input.boldColumns.includes(i)\n        ? `style=\"font-weight: 600;${alignment}\"` : '';\n      row = row + `<div class=\"rapid-tooltip-cell\" ${style}>${c}</div>`;\n    });\n    rows = rows + row;\n  });\n\n  return `\n    <div>\n      <div class=\"rapid-tooltip-title\" style=\"background-color: ${input.color};\">\n        ${input.title}\n      </div>\n      <div\n        class=\"rapid-tooltip-subsection-grid\"\n        style=\"display: grid; grid-template-columns: repeat(${columnCount}, auto);\"\n      >\n        ${rows}\n      </div>\n    </div>\n    <div class=\"rapid-tooltip-arrow-container\">\n      <div class=\"rapid-tooltip-arrow\"></div>\n    </div>\n  `;\n};","import React, {useRef} from 'react';\nimport ComparisonBarChart, {\n  BarDatum,\n  RowHoverEvent,\n} from 'react-comparison-bar-chart';\nimport styled from 'styled-components/macro';\nimport raw from 'raw.macro';\nimport {rgba} from 'polished';\nimport {getStandardTooltip, RapidTooltipRoot} from './rapidTooltip';\n\nconst primaryTotal = 169706;\nconst secondaryTotal = 57741;\n\ninterface FilteredDatum {\n  id: string;\n  title: string;\n  value: number;\n  color: string;\n  topLevelParentId: string;\n}\n\nconst {\n  filteredPrimaryData, filteredSecondaryData,\n}: {\n  filteredPrimaryData: FilteredDatum[], filteredSecondaryData: FilteredDatum[],\n} = JSON.parse(raw('../data/boston-aracaju-6-digit-data.json'));\n\nconst primaryData: BarDatum[] = [];\nconst secondaryData: BarDatum[] = [];\n  filteredPrimaryData.forEach(d => {\n    const secondaryDatum = filteredSecondaryData.find(d2 => d2.id === d.id);\n    const primaryShare = d.value / primaryTotal;\n    const secondaryShare = secondaryDatum ? secondaryDatum.value / secondaryTotal : 0;\n    const difference = primaryShare - secondaryShare;\n    if (difference > 0) {\n      primaryData.push({...d, value: difference * 100});\n    }\n  });\n  filteredSecondaryData.forEach(d => {\n    const primaryDatum = filteredPrimaryData.find(d2 => d2.id === d.id);\n    const secondaryShare = d.value / secondaryTotal;\n    const primaryShare = primaryDatum ? primaryDatum.value / primaryTotal : 0;\n    const difference = secondaryShare - primaryShare;\n    if (difference > 0) {\n      secondaryData.push({...d, value: difference * 100});\n    }\n  });\n\nconst Root = styled.div`\n  width: 100vw;\n  height: 100vh;\n  box-sizing: border-box;\n  padding: 3rem;\n\n  @media (max-width: 720px) {\n    padding: 0.75rem;\n  }\n`;\n\nconst formatValue = (value: number) => {\n  return parseFloat((value).toFixed(1)) + '%';\n}\n\nconst BostonNewYork3Digit = () => {\n  const tooltipRef = useRef<HTMLDivElement | null>(null);\n\n  const setHovered = (e: RowHoverEvent | undefined) => {\n    const node = tooltipRef.current;\n    if (node) {\n      if (e && e.datum) {\n        const {datum, mouseCoords} = e;\n        const primaryDatum = filteredPrimaryData.find(d => d.id === datum.id);\n        const secondaryDatum = filteredSecondaryData.find(d => d.id === datum.id);\n        const secondaryValue = secondaryDatum ? secondaryDatum.value / secondaryTotal * 100 : 0;\n        const primaryValue = primaryDatum ? primaryDatum.value / primaryTotal * 100 : 0;\n        const primaryDiff = primaryValue > secondaryValue ? '+' + datum.value.toFixed(2) + '%' : '';\n        const secondaryDiff = secondaryValue > primaryValue ? '+' + datum.value.toFixed(2) + '%' : '';\n        node.innerHTML = getStandardTooltip({\n          title: datum.title,\n          color: rgba(datum.color, 0.3),\n          rows: [\n            ['', 'Aracaju', 'Boston'],\n            ['Share of Employees', secondaryValue.toFixed(2) + '%', primaryValue.toFixed(2) + '%'],\n            ['Difference', secondaryDiff, primaryDiff],\n          ],\n          boldColumns: [1, 2],\n        });\n        node.style.top = mouseCoords.y + 'px';\n        node.style.left = mouseCoords.x + 'px';\n        node.style.display = 'block';\n      } else {\n        node.style.display = 'none';\n      }\n    }\n  };\n\n  const titleFormatter = (label: string, count: number, max: number) => {\n    const countText = count === max ? '' : `(Top ${count})`;\n    return `Positive ${label} share (%) ${countText}`;\n  }\n\n  return (\n    <Root>\n      <ComparisonBarChart\n        primaryData={primaryData}\n        secondaryData={secondaryData}\n        nValuesToShow={10}\n        formatValue={formatValue}\n        titles={{\n          primary: 'Boston',\n          secondary: 'Aracaju',\n          format: titleFormatter,\n        }}\n        expandCollapseText={{\n          toExpand: 'Click to see all industries',\n          toCollapse: 'Show only top industries',\n        }}\n        axisLabel={'Difference in Share'}\n        onRowHover={e => setHovered(e)}\n      />\n      <RapidTooltipRoot ref={tooltipRef} />\n    </Root>\n  )\n}\n\nexport default BostonNewYork3Digit;\n","import React, {useRef} from 'react';\nimport ComparisonBarChart, {\n  BarDatum,\n  RowHoverEvent,\n} from 'react-comparison-bar-chart';\nimport styled from 'styled-components/macro';\nimport raw from 'raw.macro';\nimport {rgba} from 'polished';\nimport {getStandardTooltip, RapidTooltipRoot} from './rapidTooltip';\n\nconst primaryTotal = 169706;\nconst secondaryTotal = 57741;\n\ninterface FilteredDatum {\n  id: string;\n  title: string;\n  value: number;\n  color: string;\n  topLevelParentId: string;\n}\n\nconst {\n  filteredPrimaryData, filteredSecondaryData,\n}: {\n  filteredPrimaryData: FilteredDatum[], filteredSecondaryData: FilteredDatum[],\n} = JSON.parse(raw('../data/boston-aracaju-2-digit-data.json'));\n\nconst primaryData: BarDatum[] = [];\nconst secondaryData: BarDatum[] = [];\n  filteredPrimaryData.forEach(d => {\n    const secondaryDatum = filteredSecondaryData.find(d2 => d2.id === d.id);\n    const primaryShare = d.value / primaryTotal;\n    const secondaryShare = secondaryDatum ? secondaryDatum.value / secondaryTotal : 0;\n    const difference = primaryShare - secondaryShare;\n    if (difference > 0) {\n      primaryData.push({...d, value: difference * 100});\n    }\n  });\n  filteredSecondaryData.forEach(d => {\n    const primaryDatum = filteredPrimaryData.find(d2 => d2.id === d.id);\n    const secondaryShare = d.value / secondaryTotal;\n    const primaryShare = primaryDatum ? primaryDatum.value / primaryTotal : 0;\n    const difference = secondaryShare - primaryShare;\n    if (difference > 0) {\n      secondaryData.push({...d, value: difference * 100});\n    }\n  });\n\nconst Root = styled.div`\n  width: 100vw;\n  height: 100vh;\n  box-sizing: border-box;\n  padding: 3rem;\n\n  @media (max-width: 720px) {\n    padding: 0.75rem;\n  }\n`;\n\nconst formatValue = (value: number) => {\n  return parseFloat((value).toFixed(1)) + '%';\n}\n\nconst BostonNewYork3Digit = () => {\n  const tooltipRef = useRef<HTMLDivElement | null>(null);\n\n  const setHovered = (e: RowHoverEvent | undefined) => {\n    const node = tooltipRef.current;\n    if (node) {\n      if (e && e.datum) {\n        const {datum, mouseCoords} = e;\n        const primaryDatum = filteredPrimaryData.find(d => d.id === datum.id);\n        const secondaryDatum = filteredSecondaryData.find(d => d.id === datum.id);\n        const secondaryValue = secondaryDatum ? secondaryDatum.value / secondaryTotal * 100 : 0;\n        const primaryValue = primaryDatum ? primaryDatum.value / primaryTotal * 100 : 0;\n        const primaryDiff = primaryValue > secondaryValue ? '+' + datum.value.toFixed(2) + '%' : '';\n        const secondaryDiff = secondaryValue > primaryValue ? '+' + datum.value.toFixed(2) + '%' : '';\n        node.innerHTML = getStandardTooltip({\n          title: datum.title,\n          color: rgba(datum.color, 0.3),\n          rows: [\n            ['', 'Aracaju', 'Boston'],\n            ['Share of Employees', secondaryValue.toFixed(2) + '%', primaryValue.toFixed(2) + '%'],\n            ['Difference', secondaryDiff, primaryDiff],\n          ],\n          boldColumns: [1, 2],\n        });\n        node.style.top = mouseCoords.y + 'px';\n        node.style.left = mouseCoords.x + 'px';\n        node.style.display = 'block';\n      } else {\n        node.style.display = 'none';\n      }\n    }\n  };\n\n  const titleFormatter = (label: string, count: number, max: number) => {\n    const countText = count === max ? '' : `(Top ${count})`;\n    return `Positive ${label} share (%) ${countText}`;\n  }\n\n  return (\n    <Root>\n      <ComparisonBarChart\n        primaryData={primaryData}\n        secondaryData={secondaryData}\n        nValuesToShow={10}\n        formatValue={formatValue}\n        titles={{\n          primary: 'Boston',\n          secondary: 'Aracaju',\n          format: titleFormatter,\n        }}\n        expandCollapseText={{\n          toExpand: 'Click to see all industries',\n          toCollapse: 'Show only top industries',\n        }}\n        axisLabel={'Difference in Share'}\n        onRowHover={e => setHovered(e)}\n      />\n      <RapidTooltipRoot ref={tooltipRef} />\n    </Root>\n  )\n}\n\nexport default BostonNewYork3Digit;\n","import React, {useRef} from 'react';\nimport ComparisonBarChart, {\n  BarDatum,\n  RowHoverEvent,\n} from 'react-comparison-bar-chart';\nimport styled from 'styled-components/macro';\nimport raw from 'raw.macro';\nimport {rgba} from 'polished';\nimport {getStandardTooltip, RapidTooltipRoot} from './rapidTooltip';\n\nconst primaryTotal = 169706;\nconst secondaryTotal = 57741;\n\ninterface FilteredDatum {\n  id: string;\n  title: string;\n  value: number;\n  color: string;\n  topLevelParentId: string;\n}\n\nconst {\n  filteredPrimaryData, filteredSecondaryData,\n}: {\n  filteredPrimaryData: FilteredDatum[], filteredSecondaryData: FilteredDatum[],\n} = JSON.parse(raw('../data/boston-aracaju-1-digit-data.json'));\n\nconst primaryData: BarDatum[] = [];\nconst secondaryData: BarDatum[] = [];\n  filteredPrimaryData.forEach(d => {\n    const secondaryDatum = filteredSecondaryData.find(d2 => d2.id === d.id);\n    const primaryShare = d.value / primaryTotal;\n    const secondaryShare = secondaryDatum ? secondaryDatum.value / secondaryTotal : 0;\n    const difference = primaryShare - secondaryShare;\n    if (difference > 0) {\n      primaryData.push({...d, value: difference * 100});\n    }\n  });\n  filteredSecondaryData.forEach(d => {\n    const primaryDatum = filteredPrimaryData.find(d2 => d2.id === d.id);\n    const secondaryShare = d.value / secondaryTotal;\n    const primaryShare = primaryDatum ? primaryDatum.value / primaryTotal : 0;\n    const difference = secondaryShare - primaryShare;\n    if (difference > 0) {\n      secondaryData.push({...d, value: difference * 100});\n    }\n  });\n\nconst Root = styled.div`\n  width: 100vw;\n  height: 100vh;\n  box-sizing: border-box;\n  padding: 3rem;\n\n  @media (max-width: 720px) {\n    padding: 0.75rem;\n  }\n`;\n\nconst formatValue = (value: number) => {\n  return parseFloat((value).toFixed(1)) + '%';\n}\n\nconst BostonNewYork3Digit = () => {\n  const tooltipRef = useRef<HTMLDivElement | null>(null);\n\n  const setHovered = (e: RowHoverEvent | undefined) => {\n    const node = tooltipRef.current;\n    if (node) {\n      if (e && e.datum) {\n        const {datum, mouseCoords} = e;\n        const primaryDatum = filteredPrimaryData.find(d => d.id === datum.id);\n        const secondaryDatum = filteredSecondaryData.find(d => d.id === datum.id);\n        const secondaryValue = secondaryDatum ? secondaryDatum.value / secondaryTotal * 100 : 0;\n        const primaryValue = primaryDatum ? primaryDatum.value / primaryTotal * 100 : 0;\n        const primaryDiff = primaryValue > secondaryValue ? '+' + datum.value.toFixed(2) + '%' : '';\n        const secondaryDiff = secondaryValue > primaryValue ? '+' + datum.value.toFixed(2) + '%' : '';\n        node.innerHTML = getStandardTooltip({\n          title: datum.title,\n          color: rgba(datum.color, 0.3),\n          rows: [\n            ['', 'Aracaju', 'Boston'],\n            ['Share of Employees', secondaryValue.toFixed(2) + '%', primaryValue.toFixed(2) + '%'],\n            ['Difference', secondaryDiff, primaryDiff],\n          ],\n          boldColumns: [1, 2],\n        });\n        node.style.top = mouseCoords.y + 'px';\n        node.style.left = mouseCoords.x + 'px';\n        node.style.display = 'block';\n      } else {\n        node.style.display = 'none';\n      }\n    }\n  };\n\n  const titleFormatter = (label: string, count: number, max: number) => {\n    const countText = count === max ? '' : `(Top ${count})`;\n    return `Positive ${label} share (%) ${countText}`;\n  }\n\n  return (\n    <Root>\n      <ComparisonBarChart\n        primaryData={primaryData}\n        secondaryData={secondaryData}\n        nValuesToShow={10}\n        formatValue={formatValue}\n        titles={{\n          primary: 'Boston',\n          secondary: 'Aracaju',\n          format: titleFormatter,\n        }}\n        expandCollapseText={{\n          toExpand: 'Click to see all industries',\n          toCollapse: 'Show only top industries',\n        }}\n        axisLabel={'Difference in Share'}\n        onRowHover={e => setHovered(e)}\n      />\n      <RapidTooltipRoot ref={tooltipRef} />\n    </Root>\n  )\n}\n\nexport default BostonNewYork3Digit;\n","import React, {useRef} from 'react';\nimport ComparisonBarChart, {\n  BarDatum,\n  RowHoverEvent,\n} from 'react-comparison-bar-chart';\nimport styled from 'styled-components/macro';\nimport raw from 'raw.macro';\nimport {rgba} from 'polished';\nimport {getStandardTooltip, RapidTooltipRoot} from './rapidTooltip';\n\nconst primaryTotal = 169706;\nconst secondaryTotal = 57741;\n\ninterface FilteredDatum {\n  id: string;\n  title: string;\n  value: number;\n  color: string;\n  topLevelParentId: string;\n}\n\nconst {\n  filteredPrimaryData, filteredSecondaryData,\n}: {\n  filteredPrimaryData: FilteredDatum[], filteredSecondaryData: FilteredDatum[],\n} = JSON.parse(raw('../data/boston-aracaju-services-only-data.json'));\n\nconst primaryData: BarDatum[] = [];\nconst secondaryData: BarDatum[] = [];\n  filteredPrimaryData.forEach(d => {\n    const secondaryDatum = filteredSecondaryData.find(d2 => d2.id === d.id);\n    const primaryShare = d.value / primaryTotal;\n    const secondaryShare = secondaryDatum ? secondaryDatum.value / secondaryTotal : 0;\n    const difference = primaryShare - secondaryShare;\n    if (difference > 0) {\n      primaryData.push({...d, value: difference * 100});\n    }\n  });\n  filteredSecondaryData.forEach(d => {\n    const primaryDatum = filteredPrimaryData.find(d2 => d2.id === d.id);\n    const secondaryShare = d.value / secondaryTotal;\n    const primaryShare = primaryDatum ? primaryDatum.value / primaryTotal : 0;\n    const difference = secondaryShare - primaryShare;\n    if (difference > 0) {\n      secondaryData.push({...d, value: difference * 100});\n    }\n  });\n\nconst Root = styled.div`\n  width: 100vw;\n  height: 100vh;\n  box-sizing: border-box;\n  padding: 3rem;\n\n  @media (max-width: 720px) {\n    padding: 0.75rem;\n  }\n`;\n\nconst formatValue = (value: number) => {\n  return parseFloat((value).toFixed(1)) + '%';\n}\n\nconst BostonNewYork3Digit = () => {\n  const tooltipRef = useRef<HTMLDivElement | null>(null);\n\n  const setHovered = (e: RowHoverEvent | undefined) => {\n    const node = tooltipRef.current;\n    if (node) {\n      if (e && e.datum) {\n        const {datum, mouseCoords} = e;\n        const primaryDatum = filteredPrimaryData.find(d => d.id === datum.id);\n        const secondaryDatum = filteredSecondaryData.find(d => d.id === datum.id);\n        const secondaryValue = secondaryDatum ? secondaryDatum.value / secondaryTotal * 100 : 0;\n        const primaryValue = primaryDatum ? primaryDatum.value / primaryTotal * 100 : 0;\n        const primaryDiff = primaryValue > secondaryValue ? '+' + datum.value.toFixed(2) + '%' : '';\n        const secondaryDiff = secondaryValue > primaryValue ? '+' + datum.value.toFixed(2) + '%' : '';\n        node.innerHTML = getStandardTooltip({\n          title: datum.title,\n          color: rgba(datum.color, 0.3),\n          rows: [\n            ['', 'Aracaju', 'Boston'],\n            ['Share of Employees', secondaryValue.toFixed(2) + '%', primaryValue.toFixed(2) + '%'],\n            ['Difference', secondaryDiff, primaryDiff],\n          ],\n          boldColumns: [1, 2],\n        });\n        node.style.top = mouseCoords.y + 'px';\n        node.style.left = mouseCoords.x + 'px';\n        node.style.display = 'block';\n      } else {\n        node.style.display = 'none';\n      }\n    }\n  };\n\n  const titleFormatter = (label: string, count: number, max: number) => {\n    const countText = count === max ? '' : `(Top ${count})`;\n    return `Positive ${label} share (%) ${countText}`;\n  }\n\n  return (\n    <Root>\n      <ComparisonBarChart\n        primaryData={primaryData}\n        secondaryData={secondaryData}\n        nValuesToShow={10}\n        formatValue={formatValue}\n        titles={{\n          primary: 'Boston',\n          secondary: 'Aracaju',\n          format: titleFormatter,\n        }}\n        expandCollapseText={{\n          toExpand: 'Click to see all industries',\n          toCollapse: 'Show only top industries',\n        }}\n        axisLabel={'Difference in Share'}\n        onRowHover={e => setHovered(e)}\n      />\n      <RapidTooltipRoot ref={tooltipRef} />\n    </Root>\n  )\n}\n\nexport default BostonNewYork3Digit;\n","import React from 'react';\nimport BostonNewYork3Digit from './components/BostonNewYork3Digit';\nimport BostonAracaju6Digit from './components/BostonAracaju6Digit';\nimport BostonAracaju2Digit from './components/BostonAracaju2Digit';\nimport BostonAracaju1Digit from './components/BostonAracaju1Digit';\nimport BostonAracajuServicesOnly from './components/BostonAracajuServicesOnly';\nimport {\n  Route,\n  Switch,\n  HashRouter,\n} from 'react-router-dom';\n\nconst App = () => {\n\n  return (\n    <HashRouter>\n      <Switch>\n        <Route exact path={'/3-digit'} component={BostonNewYork3Digit} />\n        <Route exact path={'/6-digit'} component={BostonAracaju6Digit} />\n        <Route exact path={'/2-digit'} component={BostonAracaju2Digit} />\n        <Route exact path={'/1-digit'} component={BostonAracaju1Digit} />\n        <Route exact path={'/services-only'} component={BostonAracajuServicesOnly} />\n        <Route component={BostonNewYork3Digit} />\n      </Switch>\n    </HashRouter>\n  )\n}\n\nexport default App;\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}