{"version":3,"sources":["../../src/components/Utils.ts","../../src/components/Row.tsx","../../src/components/Root.tsx","../../src/index.tsx","components/BostonNewYork3Digit.tsx","components/rapidTooltip.ts","components/BostonAracaju6Digit.tsx","components/BostonAracaju2Digit.tsx","components/BostonAracaju1Digit.tsx","components/BostonAracajuServicesOnly.tsx","App.tsx","index.tsx"],"names":["Layout","Category","highlightedIdName","fadeIn","keyframes","Root","styled","LabelText","Cell","BarCell","RangeBase","RangeLeft","RangeRight","Bar","React","props","i","d","expanded","totalRightValues","totalLeftValues","rowHeight","totalValues","gridHeight","orderedRightData","rightMax","leftMax","onRowHover","leftRange","rightRange","chartRef","layout","highlighted","useState","hoveredId","setHoveredId","ref","isRowVisible","category","style","height","backgroundColor","undefined","pointerEvents","transitionDelay","label","className","textAlign","leftBar","width","rightBar","onMouseMove","e","datum","mouseCoords","x","y","clientY","onMouseLeave","id","Container","ChartContainer","TitleRoot","AxisLines","TitleBase","TitleLeft","TitleRight","H1","H2","Grid","ExpandButtonRow","ExpandButton","Arrow","AxisValue","AxisText","AxisLine","AxisTitle","roundUpToHalf","value","roundedUp","Math","previousHalfValue","primaryData","secondaryData","nValuesToShow","formatValue","titles","expandCollapseText","axisLabel","hideExpandCollapseButton","initialExpanded","onExpandCollapseButtonHover","leftData","rightData","setExpanded","chartWidth","setMeasurements","rootRef","useRef","useEffect","chartRect","updateWindowWidth","window","rootNode","highlightedElm","setTimeout","orderBy","orderedLeftData","maxRows","console","rightTop","leftTop","rightTopValue","leftTopValue","rawTotalRange","axisIncrement","totalRange","totalTopValues","rows","key","length","totalAxisValues","totalValuesLeftOfZero","totalValuesRightOfZero","axisFontSize","axisWidth","axisLines","formatted","axisTitle","right","titleFormatter","titleLeft","titleRight","h1Left","h2Left","h1Right","h2Right","expandCollapseButtonText","expandCollapseButton","onClick","current","dangerouslySetInnerHTML","__html","buffer","paddingRight","overflowPadding","paddingLeft","visibility","marginLeft","left","gridTemplateRows","gridTemplateColumns","overflow","top","colorMap","color","naicsData","JSON","parse","bostonTotal","bostonData","forEach","naics_id","num_employ","industry","find","topLevelParentId","toString","parent_id","parseInt","error","Error","parentColor","c","push","title","name","newYorkTotal","newYorkData","sharesDataBoston","newYorkDatum","ny","difference","sharesDataNewYork","bostonDatum","bost","div","Tooltip","TooltipTitle","TooltipSubsectionGrid","SemiBold","span","ArrowContainer","parseFloat","toFixed","BostonNewYork3Digit","tooltip","hovered","setHovered","newYorkValue","bostonValue","nyDiff","bosDiff","rgba","primary","secondary","format","count","max","countText","toExpand","toCollapse","RapidTooltipRoot","getStandardTooltip","input","columnCount","r","row","alignment","boldColumns","includes","filteredPrimaryData","filteredSecondaryData","secondaryDatum","d2","primaryDatum","tooltipRef","node","secondaryValue","primaryValue","primaryDiff","secondaryDiff","innerHTML","display","App","exact","path","component","BostonAracaju6Digit","BostonAracaju2Digit","BostonAracaju1Digit","BostonAracajuServicesOnly","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d98644b1.chunk.js","sourcesContent":["export interface WithDyanmicFont {\n  $dynamicFont: string; // should be value of clamp\n}\n\nexport interface BarDatum {\n  id: string,\n  title: string,\n  value: number,\n  color: string,\n}\n\nexport enum Category {\n  Primary,\n  Secondary,\n}\n\nexport interface RowHoverEvent {\n  datum: BarDatum | undefined;\n  mouseCoords: {x: number, y: number};\n}\n\nexport enum Layout {\n  Left = 'left',\n  Right = 'right',\n}\n","import React, {useState} from 'react';\nimport styled, {keyframes} from 'styled-components/macro';\nimport {\n  WithDyanmicFont,\n  BarDatum,\n  Category,\n  RowHoverEvent,\n  Layout,\n} from './Utils';\n\nexport const highlightedIdName = 'react-comparison-bar-chart-highlighted-item';\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n`;\n\nconst Root = styled.div`\n  display: contents;\n`;\n\nconst LabelText = styled.div<WithDyanmicFont>`\n  width: 100%;\n  font-size: ${({$dynamicFont}) => $dynamicFont};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  opacity: 0;\n  animation: ${fadeIn} 0.15s linear 1 forwards 0.3s;\n`;\n\nconst Cell = styled.div`\n  transition: height 0.3s ease-in-out;\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n`;\n\nconst BarCell = styled(Cell)`\n  display: flex;\n`;\n\nconst RangeBase = styled.div`\n  height: 100%;\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n`;\n\nconst RangeLeft = styled(RangeBase)`\n  border-right: solid 1px #333;\n  justify-content: flex-end;\n`;\n\nconst RangeRight = styled(RangeBase)`\n  border-left: solid 1px #333;\n`;\n\nconst Bar = styled.div`\n  height: 70%;\n  transition: width 0.2s ease-in-out;\n`;\n\ninterface Props {\n  i: number;\n  d: BarDatum;\n  expanded: boolean;\n  totalRightValues: number;\n  totalLeftValues: number;\n  totalValues: number;\n  rowHeight: number;\n  orderedRightData: BarDatum[];\n  gridHeight: number;\n  rightMax: number;\n  leftMax: number;\n  onRowHover: undefined | ((event: RowHoverEvent) => void);\n  leftRange: number;\n  rightRange: number;\n  chartRef: React.MutableRefObject<HTMLDivElement | null>;\n  layout: Layout | undefined;\n  highlighted: string | undefined;\n}\n\nconst maxCellsForAnimation = 900;\n\nconst Row = (props: Props) => {\n  const {\n    i, d, expanded, totalRightValues, totalLeftValues, rowHeight, totalValues, gridHeight,\n    orderedRightData, rightMax, leftMax, onRowHover,\n    leftRange, rightRange, chartRef, layout, highlighted,\n  } = props;\n\n  const [hoveredId, setHoveredId] = useState<BarDatum['id'] | undefined>(undefined); \n  \n  const ref = i === 0 ? chartRef : undefined;\n  const isRowVisible = expanded || (i < totalRightValues || i > totalValues - (totalLeftValues + 1));\n  if (!isRowVisible && totalValues > maxCellsForAnimation) {\n    return null;\n  }\n  const category: Category = i < orderedRightData.length ? Category.Primary : Category.Secondary;\n  const style: React.CSSProperties = isRowVisible ? {\n    height: rowHeight,\n    backgroundColor: hoveredId === d.id || highlighted === d.id ? '#f1f1f1' : undefined,\n  } : {\n    height: 0,\n    pointerEvents: 'none',\n    transitionDelay: totalValues <= maxCellsForAnimation && !highlighted ? '0.15s' : undefined,\n  };\n  const label = isRowVisible ? (\n    <LabelText\n      className={'react-comparison-bar-chart-row-label'}\n      style={{\n        textAlign: layout === Layout.Right ? 'left' : 'right',\n      }}\n      $dynamicFont={`clamp(0.5rem, ${gridHeight * 0.04}px, 0.9rem)`}\n    >\n      {d.title}\n    </LabelText>\n  ) : null;\n  const leftBar = category === Category.Secondary ? (\n    <Bar\n      className={'react-comparison-bar-chart-bar react-comparison-bar-chart-bar-left'}\n      style={{\n        backgroundColor: d.color,\n        width: isRowVisible ? `${d.value / leftMax * 100}%` : 0,\n        transitionDelay: isRowVisible && totalValues <= maxCellsForAnimation && !highlighted ? '0.3s' : undefined,\n      }}\n    />\n  ) : null;\n  const rightBar = category === Category.Primary ? (\n    <Bar\n      className={'react-comparison-bar-chart-bar react-comparison-bar-chart-bar-right'}\n      style={{\n        backgroundColor: d.color,\n        width: isRowVisible ? `${d.value / rightMax * 100}%` : 0,\n        transitionDelay: isRowVisible && totalValues <= maxCellsForAnimation && !highlighted ? '0.3s' : undefined,\n      }}\n    />\n  ) : null;\n  const onMouseMove = (e: React.MouseEvent) => {\n    setHoveredId(d.id);\n    if (onRowHover) {\n      onRowHover({\n        datum: d,\n        mouseCoords: {\n          x: e.clientX,\n          y: e.clientY,\n        },\n      })\n    }\n  }\n\n  const onMouseLeave = (e: React.MouseEvent) => {\n    setHoveredId(undefined);\n    if (onRowHover) {\n      onRowHover({\n        datum: undefined,\n        mouseCoords: {\n          x: e.clientX,\n          y: e.clientY,\n        },\n      })\n    }\n  }\n\n  if (layout === Layout.Right) {\n    return (\n      <Root>\n        <BarCell\n          id={highlighted === d.id ? highlightedIdName : undefined}\n          style={style}\n          ref={ref}\n          onMouseMove={onMouseMove}\n          onMouseLeave={onMouseLeave}\n        >\n          <RangeLeft style={{width: `${leftRange}%`}}>\n            {leftBar}\n          </RangeLeft>\n          <RangeRight style={{width: `${rightRange}%`}}>\n            {rightBar}\n          </RangeRight>\n        </BarCell>\n        <Cell\n          style={style}\n          onMouseMove={onMouseMove}\n          onMouseLeave={onMouseLeave}\n        />\n        <Cell\n          style={style}\n          onMouseMove={onMouseMove}\n          onMouseLeave={onMouseLeave}\n        >\n          {label}\n        </Cell>\n      </Root>\n    );\n  } else {\n    return (\n      <Root>\n        <Cell\n          style={style}\n          onMouseMove={onMouseMove}\n          onMouseLeave={onMouseLeave}\n        >\n          {label}\n        </Cell>\n        <Cell\n          style={style}\n          onMouseMove={onMouseMove}\n          onMouseLeave={onMouseLeave}\n        />\n        <BarCell\n          id={highlighted === d.id ? highlightedIdName : undefined}\n          style={style}\n          ref={ref}\n          onMouseMove={onMouseMove}\n          onMouseLeave={onMouseLeave}\n        >\n          <RangeLeft style={{width: `${leftRange}%`}}>\n            {leftBar}\n          </RangeLeft>\n          <RangeRight style={{width: `${rightRange}%`}}>\n            {rightBar}\n          </RangeRight>\n        </BarCell>\n      </Root>\n    );\n  }\n\n}\n\nexport default React.memo(Row);\n","import React, {useState, useRef, useEffect} from 'react';\nimport styled from 'styled-components/macro';\nimport orderBy from 'lodash/orderBy';\nimport raw from 'raw.macro';\nimport Row, {highlightedIdName} from './Row';\nimport {\n  WithDyanmicFont,\n  BarDatum,\n  RowHoverEvent,\n  Layout,\n} from './Utils';\n\nconst maxRows = 998;\n\nconst ArrowCollapseSVG = raw('../assets/arrow-collapse.svg');\nconst ArrowExpandSVG = raw('../assets/arrow-expand.svg');\n\nconst titleHeight = 120; // in px\nconst overflowPadding = 1; // in rem. Needed to allow for final axis value to remain visible\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  padding-top: ${titleHeight}px;\n  padding-bottom: 2rem;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  box-sizing: border-box;\n  position: relative;\n  overflow: hidden;\n`;\n\nconst ChartContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  position: relative;\n`;\n\nconst TitleRoot = styled.div<WithDyanmicFont>`\n  margin-left: auto;\n  display: flex;\n  height: ${titleHeight}px;\n  position: absolute;\n  top: 0;\n  font-size: ${({$dynamicFont}) => $dynamicFont};\n`;\n\nconst AxisLines = styled.div`\n  position: absolute;\n  top: ${titleHeight}px;\n  width: 100%;\n  display: flex;\n`;\n\nconst TitleBase = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  box-sizing: border-box;\n`;\n\nconst TitleLeft = styled(TitleBase)`\n  border-right: solid 1px #333;\n  align-items: flex-end;\n  padding-right: 1.5rem;\n`;\n\nconst TitleRight = styled(TitleBase)`\n  border-left: solid 1px #333;\n  padding-left: 1.5rem;\n`;\n\nconst H1 = styled.h1`\n  font-size: inherit;\n  text-transform: uppercase;\n  margin: 0;\n  font-weight: 400;\n`;\nconst H2 = styled.h2`\n  font-size: inherit;\n  margin: 0;\n  font-weight: 400;\n`;\n\nconst Grid = styled.div`\n  width: 100%;\n  height: 100%;\n  grid-row: 1;\n  display: grid;\n  position: relative;\n  /* both auto and overlay required for browsers that don't support overlay */\n  overflow: auto;\n  overflow-y: overlay;\n  overflow-x: hidden\n\n  ::-webkit-scrollbar {\n    -webkit-appearance: none;\n    width: 7px;\n  }\n  ::-webkit-scrollbar-thumb {\n    border-radius: 4px;\n    background-color: rgba(0, 0, 0, .3);\n  }\n  ::-webkit-scrollbar-track {\n    background-color: rgba(0, 0, 0, .1);\n  }\n`;\n\nconst ExpandButtonRow = styled.div`\n  grid-column: 1 / -1;\n  pointer-events: none;\n  position: sticky;\n  height: 0;\n  display: flex;\n`;\n\nconst ExpandButton = styled.button<WithDyanmicFont & {$dynamicMaxWidth: string}>`\n  pointer-events: all;\n  margin-left: auto;\n  border: none;\n  background-color: transparent;\n  text-align: left;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  font-size: ${({$dynamicFont}) => $dynamicFont};\n  max-width: ${({$dynamicMaxWidth}) => $dynamicMaxWidth};\n  text-shadow:\n   -1px -1px 0 #fff,  \n    1px -1px 0 #fff,\n    -1px 1px 0 #fff,\n     1px 1px 0 #fff;\n  transform: translate(0, 1rem);\n\n  &:focus:not(:focus-visible) {\n    outline: none;\n  }\n`;\n\nconst Arrow = styled.span`\n  width: 1rem;\n  height: 1rem;\n  margin-left: 0.5rem;\n\n  svg {\n    width: 100%;\n    height: 100%;\n\n    .cls-1 {\n      fill: none;\n      stroke: #2d2d2d;\n      stroke-miterlimit: 10;\n      stroke-width: 0.94px;\n    }\n\n    .cls-2 {\n      fill: #2d2d2d;\n    }\n  }\n\n`;\n\nconst AxisValue = styled.div`\n  display: flex;\n  flex-shrink: 0;\n  background-color: #fff;\n  position: relative;\n  pointer-events: none;\n\n\n  &:after {\n    content: '';\n    width: 100%;\n    height: 0;\n    position: absolute;\n    bottom: 0;\n  }\n\n  &:not(:last-child) {\n    &:after {\n      border-bottom: solid 2px #333;\n      z-index: 10;\n    }\n  }\n\n  :last-child {\n    &:after {\n      border-bottom: solid 2px transparent;\n    }\n  }\n`;\n\nconst AxisText = styled.span<WithDyanmicFont>`\n  font-size: ${({$dynamicFont}) => $dynamicFont};\n  transform: translate(-50%, calc(100% + 4px));\n  position: absolute;\n  bottom: 0;\n`;\n\nconst AxisLine = styled.div`\n  position: absolute;\n  top: 0;\n  height: 100%;\n  width: 0;\n  border-left: solid 1px #dfdfdf;\n`;\n\nconst AxisTitle = styled.div<WithDyanmicFont>`\n  position: absolute;\n  bottom: 0;\n  z-index: 1;\n  font-size: ${({$dynamicFont}) => $dynamicFont};\n  padding: 0 0 0.3rem 1rem;\n  box-sizing: border-box;\n  pointer-events: none;\n  transform: translate(-1rem, 0);\n`;\n\nexport interface Props {\n  primaryData: BarDatum[];\n  secondaryData: BarDatum[];\n  nValuesToShow: number;\n  formatValue?: (value: number) => string | number;\n  titles?: {\n    primary: string;\n    secondary: string;\n    format?: (label: string, count: number, max: number) => string;\n  }\n  expandCollapseText?: {\n    toExpand: string,\n    toCollapse: string,\n  }\n  axisLabel?: string;\n  onRowHover?: (event: RowHoverEvent) => void;\n  hideExpandCollapseButton?: boolean;\n  initialExpanded?: boolean;\n  layout?: Layout;\n  highlighted?: string;\n  onExpandCollapseButtonHover?: (event: React.MouseEvent<HTMLElement>) => void;\n}\n\nconst roundUpToHalf = (value: number) => {\n  const roundedUp = Math.ceil(value);\n  const previousHalfValue = roundedUp - 0.5;\n  if (previousHalfValue <= value) {\n    return roundedUp;\n  } else {\n    return previousHalfValue;\n  }\n}\n\ninterface Measurements {\n  gridHeight: number,\n  chartWidth: number,\n}\n\nconst Root = (props: Props) => {\n  const {\n    primaryData, secondaryData, nValuesToShow, formatValue, titles, expandCollapseText,\n    axisLabel, onRowHover, hideExpandCollapseButton, initialExpanded, layout, highlighted,\n    onExpandCollapseButtonHover,\n  } = props;\n\n  if (!primaryData.length && !secondaryData.length) {\n    return null;\n  }\n\n  const leftData = layout === Layout.Right ? primaryData : secondaryData;\n  const rightData = layout === Layout.Right ? secondaryData : primaryData;\n\n  const [expanded, setExpanded] = useState<boolean>(initialExpanded ? true : false);\n  const [{gridHeight, chartWidth}, setMeasurements] = useState<Measurements>({gridHeight: 0, chartWidth: 0});\n  const rootRef = useRef<HTMLDivElement | null>(null);\n  const chartRef = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    if (rootRef && rootRef.current && chartRef && chartRef.current) {\n      const chartRect = chartRef.current.getBoundingClientRect();\n      setMeasurements({gridHeight: rootRef.current.offsetHeight, chartWidth: chartRect.width});\n    }\n  }, [rootRef, chartRef])\n\n  useEffect(() => {\n    const updateWindowWidth = () => {\n      if (rootRef && rootRef.current && chartRef && chartRef.current) {\n        const chartRect = chartRef.current.getBoundingClientRect();\n        setMeasurements({gridHeight: rootRef.current.offsetHeight, chartWidth: chartRect.width});\n      }\n    };\n    window.addEventListener('resize', updateWindowWidth);\n    return () => {\n      window.removeEventListener('resize', updateWindowWidth);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (rootRef && rootRef.current) {\n      const rootNode = rootRef.current;\n      const highlightedElm: HTMLElement | null = rootRef.current.querySelector(`#${highlightedIdName}`);\n      if (highlightedElm) {\n        const highlightedRect = highlightedElm.getBoundingClientRect();\n        if (highlightedRect.height) {\n          rootNode.scrollTop = highlightedElm.offsetTop;\n        } else {\n          setExpanded(true)\n          setTimeout(() => {\n            rootNode.scrollTop = highlightedElm.offsetTop;\n          }, 500)\n        }\n      }\n    }\n  }, [rootRef, highlighted]);\n\n  const orderedRightData = orderBy(rightData, ['value'], 'desc');\n  const orderedLeftData = orderBy(leftData, ['value'], 'desc');\n\n  if (expanded && orderedRightData.length + orderedLeftData.length > maxRows) {\n    if (orderedRightData.length > maxRows / 2) {\n      console.warn(\n        'Data to right of 0 exceeds maximum node count of 998. The following nodes have been removed:',\n        orderedRightData.splice(maxRows / 2, orderedRightData.length),\n      );\n    }\n    if (orderedLeftData.length > maxRows / 2) {\n      console.warn(\n        'Data to left of 0 exceeds maximum node count of 998. The following nodes have been removed:',\n        orderedLeftData.splice(maxRows / 2, orderedLeftData.length),\n      );\n    }\n  }\n\n  const rightTop = orderedRightData.slice(0, nValuesToShow);\n  const leftTop = orderedLeftData.slice(0, nValuesToShow);\n\n  let rightTopValue = rightTop.length ? rightTop[0].value : 0;\n  let leftTopValue = leftTop.length ? leftTop[0].value : 0;\n  if (!rightTopValue) {\n    rightTopValue = leftTopValue;\n  }\n  if (!leftTopValue) {\n    leftTopValue = rightTopValue;\n  }\n  if (!leftTopValue && !rightTopValue) {\n    rightTopValue = 1;\n    leftTopValue = 1;\n  }\n\n  const rawTotalRange = rightTopValue + leftTopValue;\n  let rightMax: number;\n  let leftMax: number;\n  let axisIncrement: number;\n  if (rawTotalRange < 7) {\n    rightMax = roundUpToHalf(rightTopValue);\n    leftMax = roundUpToHalf(leftTopValue);\n    axisIncrement = 0.5;\n  } else if (rawTotalRange < 14) {\n    rightMax = Math.ceil(rightTopValue);\n    leftMax = Math.ceil(leftTopValue);\n    axisIncrement = 1;\n  } else if (rawTotalRange < 21) {\n    rightMax = 2 * Math.ceil(rightTopValue / 2);\n    leftMax = 2 * Math.ceil(leftTopValue / 2);\n    axisIncrement = 2;\n  } else {\n    rightMax = 3 * Math.ceil(rightTopValue / 3);\n    leftMax = 3 * Math.ceil(leftTopValue / 3);\n    axisIncrement = 3;\n  }\n\n  const totalRange = rightMax + leftMax;\n  const leftRange = leftMax / totalRange * 100\n  const rightRange = rightMax / totalRange * 100\n\n  const totalValues = rightData.length + leftData.length;\n  const totalTopValues = rightTop.length + leftTop.length;\n  const rowHeight = gridHeight ? ((1 / totalTopValues) * gridHeight) : 0;\n\n  const rows = [...orderedRightData, ...orderedLeftData.reverse()].map((d, i) => {\n    return (\n      <Row\n        key={d.id}\n        i={i}\n        d={d}\n        expanded={expanded}\n        totalRightValues={rightTop.length}\n        totalLeftValues={leftTop.length}\n        totalValues={totalValues}\n        rowHeight={rowHeight}\n        orderedRightData={orderedRightData}\n        gridHeight={gridHeight}\n        rightMax={rightMax}\n        leftMax={leftMax}\n        onRowHover={onRowHover}\n        leftRange={leftRange}\n        rightRange={rightRange}\n        chartRef={chartRef}\n        layout={layout}\n        highlighted={highlighted}\n      />\n    );\n  })\n\n  if (layout === Layout.Right) {\n    rows.reverse();\n  }\n\n  const totalAxisValues = totalRange / axisIncrement;\n  const totalValuesLeftOfZero = Math.round((leftRange / 100) * totalAxisValues);\n  const totalValuesRightOfZero = totalAxisValues - totalValuesLeftOfZero;\n\n  let axisFontSize: string;\n  if (chartWidth < gridHeight) {\n    axisFontSize = `clamp(0.55rem, ${chartWidth * 0.025}px, 1rem)`;\n  } else {\n    axisFontSize = `clamp(0.55rem, ${gridHeight * 0.025}px, 1rem)`;\n  }\n  const axisWidth = chartWidth / totalAxisValues;\n\n  const axisLines: React.ReactElement<any>[] = [];\n  for (let i = totalValuesLeftOfZero + 1; i > 0; i--) {\n    const value = axisIncrement * i;\n    if (value <= leftMax) {\n      const formatted = formatValue ? formatValue(value) : value;\n      axisLines.push(\n        <AxisValue\n          key={'axis-line-left-' + i}\n          style={{width: axisWidth}}\n          className={'react-comparison-bar-chart-axis-value'}\n        >\n          <AxisText\n            $dynamicFont={axisFontSize}\n          >\n            {formatted}\n          </AxisText>\n          <AxisLine />\n        </AxisValue>\n      );\n    }\n  }\n\n  for (let i = 0; i < totalValuesRightOfZero + 1; i++) {\n    const value = axisIncrement * i;\n    if (value <= rightMax) {\n      const formatted = formatValue ? formatValue(value) : value;\n      axisLines.push(\n        <AxisValue\n          key={'axis-line-right-' + i}\n          style={{width: axisWidth}}\n          className={'react-comparison-bar-chart-axis-value'}\n        >\n          <AxisText\n            $dynamicFont={axisFontSize}\n          >\n            {formatted}\n          </AxisText>\n          <AxisLine />\n        </AxisValue>\n      );\n    }\n  }\n\n  const axisTitle = axisLabel ? (\n    <AxisTitle\n      style={{\n        width: layout !== Layout.Right ? (rightRange / 100) * chartWidth : (leftRange / 100) * chartWidth,\n        right: layout !== Layout.Right ? 0 : undefined,\n        textAlign: layout !== Layout.Right ? 'right' : undefined,\n      }}\n      className={'react-comparison-bar-chart-axis-title'}\n      $dynamicFont={`clamp(0.75rem, ${chartWidth * 0.025}px, 1.1rem)`}\n    >\n      {axisLabel}\n    </AxisTitle>\n  ) : null;\n\n  const titleFormatter = titles && titles.format ? titles.format : (label: string) => label;\n\n  let titleLeft: string | undefined;\n  let titleRight: string | undefined;\n  if (layout === Layout.Right) {\n    titleLeft = titles && titles.primary ? titles.primary : undefined;\n    titleRight = titles && titles.secondary ? titles.secondary : undefined;\n  } else {\n    titleLeft = titles && titles.secondary ? titles.secondary : undefined;\n    titleRight = titles && titles.primary ? titles.primary : undefined;\n  }\n\n  const h1Left = titleLeft ? (\n    <H1>{titleFormatter(titleLeft, leftTop.length, orderedLeftData.length)}</H1>\n  ) : null;\n  const h2Left = titleLeft && titleRight ? (\n    <H2>{titleLeft} {'>'} {titleRight}</H2>\n  ) : null;\n  const h1Right = titles && titleRight ? (\n    <H1>{titleFormatter(titleRight, rightTop.length, orderedRightData.length)}</H1>\n  ) : null;\n  const h2Right = titleLeft && titleRight ? (\n    <H2>{titleRight} {'>'} {titleLeft}</H2>\n  ) : null;\n\n  let expandCollapseButtonText: string;\n  if (expanded) {\n    expandCollapseButtonText = expandCollapseText ? expandCollapseText.toCollapse : 'Collapse';\n  } else {\n    expandCollapseButtonText = expandCollapseText ? expandCollapseText.toExpand : 'Expand';\n  }\n\n  const expandCollapseButton = hideExpandCollapseButton ||\n    (rightTop.length < nValuesToShow && leftTop.length < nValuesToShow)\n    ? null : (\n      <ExpandButton\n        onClick={() => setExpanded(current => !current)}\n        className={'react-comparison-bar-chart-expand-button'}\n        style={{\n        }}\n        $dynamicFont={`clamp(0.7rem, ${chartWidth * 0.015}px, 0.85rem)`}\n        $dynamicMaxWidth={chartWidth > 300 ? `${chartWidth * 0.25}px` : '75px'}\n        onMouseMove={onExpandCollapseButtonHover}\n      >\n        <Arrow\n          dangerouslySetInnerHTML={{__html: expanded ? ArrowCollapseSVG : ArrowExpandSVG}}\n        /> {expandCollapseButtonText}\n      </ExpandButton>\n    );\n\n    const buffer: React.CSSProperties = layout !== Layout.Right\n      ? {paddingRight: overflowPadding + 'rem'} : {paddingLeft: overflowPadding + 'rem'};\n\n  return (\n    <Container\n      style={{...buffer}}\n    >\n      <TitleRoot\n        style={{\n          width: chartWidth,\n          visibility: chartWidth ? undefined : 'hidden',\n          marginLeft: layout !== Layout.Right ? undefined : 0,\n          right: layout !== Layout.Right ? 0 : undefined,\n          left: layout !== Layout.Right ? undefined : 0,\n          ...buffer,\n        }}\n        $dynamicFont={`clamp(0.65rem, ${chartWidth * 0.03}px, 0.95rem)`}\n      >\n        <TitleLeft style={{width: `${leftRange}%`}}>\n          <div className={'react-comparison-bar-chart-title react-comparison-bar-chart-title-left'}>\n            {h1Left}\n            {h2Left}\n          </div>\n        </TitleLeft>\n        <TitleRight style={{width: `${rightRange}%`}}>\n          <div className={'react-comparison-bar-chart-title react-comparison-bar-chart-title-right'}>\n            {h1Right}\n            {h2Right}\n          </div>\n        </TitleRight>\n        <AxisLines style={{height: gridHeight}}>\n          {axisTitle}\n          {axisLines}\n        </AxisLines>\n      </TitleRoot>\n      <ChartContainer>\n        <Grid\n          ref={rootRef}\n          style={{\n            gridTemplateRows: 'repeat(${totalValues}, auto)',\n            gridTemplateColumns: layout !== Layout.Right\n              ? 'clamp(75px, 300px, 25%) 2rem 1fr'\n              : '1fr 2rem clamp(75px, 300px, 25%)',\n            overflow: expanded ? undefined : 'hidden',\n          }}\n          className={'react-comparison-bar-chart-grid'}\n        >\n          <ExpandButtonRow\n            style={{\n              top: (gridHeight / 2),\n              width: layout !== Layout.Right ? undefined : chartWidth,\n              visibility: chartWidth ? undefined : 'hidden',\n            }}\n            className={'react-comparison-bar-chart-expand-button-container'}\n          >\n            {expandCollapseButton}\n          </ExpandButtonRow>\n          {rows}\n        </Grid>\n      </ChartContainer>\n    </Container>\n  );\n}\n\nexport default Root;\n","import React from 'react'\nimport Root, {\n  Props as ComparisonBarChartProps,\n} from './components/Root';\nimport {\n  BarDatum,\n  RowHoverEvent,\n  Layout,\n} from './components/Utils';\n\nconst ComparisonBarChart = (props: ComparisonBarChartProps) => {\n  return (\n    <Root {...props} />\n  );\n}\n\nexport {\n  ComparisonBarChartProps,\n  BarDatum,\n  RowHoverEvent,\n  Layout,\n}\n\nexport default ComparisonBarChart;\n","import React, {useState} from 'react';\nimport ComparisonBarChart, {\n  BarDatum,\n  RowHoverEvent,\n} from 'react-comparison-bar-chart';\nimport styled from 'styled-components/macro';\nimport raw from 'raw.macro';\nimport {rgba} from 'polished';\n\nconst colorMap = [\n  { id: '0', color: '#A973BE' },\n  { id: '1', color: '#F1866C' },\n  { id: '2', color: '#FFC135' },\n  { id: '3', color: '#93CFD0' },\n  { id: '4', color: '#488098' },\n  { id: '5', color: '#77C898' },\n  { id: '6', color: '#6A6AAD' },\n  { id: '7', color: '#D35162' },\n  { id: '8', color: '#F28188' },\n]\n\ninterface NaicsDatum {\n  naics_id: number,\n  code: string,\n  name: string,\n  level: number,\n  parent_id: number | null,\n  parent_code: string | null,\n  code_hierarchy: string,\n  naics_id_hierarchy: string,\n}\n\nconst naicsData: NaicsDatum[] = JSON.parse(raw('../data/naics_2017.json'));\n\nlet bostonTotal = 0;\nconst bostonData: BarDatum[] = [];\nJSON.parse(raw('../data/boston-3digit-shares.json'))\n  .forEach(({naics_id, num_employ}: {naics_id: number, num_employ: number}) => {\n    const industry = naicsData.find(d => d.naics_id === naics_id);\n    let topLevelParentId: string = naics_id.toString();\n    let current: NaicsDatum | undefined = naicsData.find(datum => datum.naics_id === naics_id);\n    while(current && current.parent_id !== null) {\n      // eslint-disable-next-line\n      current = naicsData.find(datum => datum.naics_id === (current as NaicsDatum).parent_id);\n      if (current && current.parent_id !== null) {\n        topLevelParentId = current.parent_id.toString();\n      } else if (current && current.naics_id !== null) {\n        topLevelParentId = current.naics_id.toString();\n      }\n    }\n    if (parseInt(topLevelParentId, 10) > 8) {\n      console.error(current);\n      throw new Error('Parent out of range')\n    }\n    const parentColor = colorMap.find(c => c.id === topLevelParentId);\n    if (industry && parentColor) {\n      bostonTotal += num_employ;\n      bostonData.push({\n        id: naics_id.toString(),\n        title: industry.name,\n        value: num_employ,\n        color: parentColor.color,\n      })\n    }\n  });\n\nlet newYorkTotal = 0;\nconst newYorkData: BarDatum[] = [];\nJSON.parse(raw('../data/newyork-3digit-shares.json'))\n  .forEach(({naics_id, num_employ}: {naics_id: number, num_employ: number}) => {\n    const industry = naicsData.find(d => d.naics_id === naics_id);\n    let topLevelParentId: string = naics_id.toString();\n    let current: NaicsDatum | undefined = naicsData.find(datum => datum.naics_id === naics_id);\n    while(current && current.parent_id !== null) {\n      // eslint-disable-next-line\n      current = naicsData.find(datum => datum.naics_id === (current as NaicsDatum).parent_id);\n      if (current && current.parent_id !== null) {\n        topLevelParentId = current.parent_id.toString();\n      } else if (current && current.naics_id !== null) {\n        topLevelParentId = current.naics_id.toString();\n      }\n    }\n    if (parseInt(topLevelParentId, 10) > 8) {\n      console.error(current);\n      throw new Error('Parent out of range')\n    }\n    const parentColor = colorMap.find(c => c.id === topLevelParentId);\n    if (industry && parentColor) {\n      newYorkTotal += num_employ;\n      newYorkData.push({\n        id: naics_id.toString(),\n        title: industry.name,\n        value: num_employ,\n        color: parentColor.color,\n      })\n    }\n  });\n\nconst sharesDataBoston: BarDatum[] = [];\nbostonData.forEach(d => {\n  const newYorkDatum = newYorkData.find(ny => ny.id === d.id);\n  const bostonShare = d.value / bostonTotal;\n  const newYorkShare = newYorkDatum ? newYorkDatum.value / newYorkTotal : 0;\n  const difference = bostonShare - newYorkShare;\n  if (difference > 0) {\n    sharesDataBoston.push({...d, value: difference * 100})\n  }\n});\nconst sharesDataNewYork: BarDatum[] = [];\nnewYorkData.forEach(d => {\n  const bostonDatum = bostonData.find(bost => bost.id === d.id);\n  const newYorkShare = d.value / newYorkTotal;\n  const bostonShare = bostonDatum ? bostonDatum.value / bostonTotal : 0;\n  const difference = newYorkShare - bostonShare;\n  if (difference > 0) {\n    sharesDataNewYork.push({...d, value: difference * 100})\n  }\n});\n\nconst Root = styled.div`\n  width: 100vw;\n  height: 100vh;\n  box-sizing: border-box;\n  padding: 3rem;\n\n  @media (max-width: 720px) {\n    padding: 0.75rem;\n  }\n`;\n\nconst Tooltip = styled.div`\n  position: fixed;\n  z-index: 3000;\n  max-width: 16rem;\n  padding-bottom: 0.5rem;\n  font-size: 0.7rem;\n  line-height: 1.4;\n  text-transform: none;\n  transition: opacity 0.15s ease;\n  color: #333;\n  background-color: #fff;\n  border: 1px solid #dfdfdf;\n  border-radius: 4px;\n  box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.15);\n  pointer-events: none;\n  transform: translate(-50%, calc(-100% - 1.5rem));\n`;\n\nconst TooltipTitle = styled.div`\n  padding: 0.5rem;\n`;\n\nconst TooltipSubsectionGrid = styled.div`\n  display: grid;\n  grid-template-columns: auto auto auto;\n  grid-gap: 0.5rem;\n  padding: 0.5rem;\n`;\n\nconst SemiBold = styled.span`\n  font-weight: 500;\n  display: flex;\n  justify-content: flex-end;\n  text-align: right;\n`;\nconst Cell = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  text-align: right;\n`;\n\nconst ArrowContainer = styled.div`\n  width: 100%;\n  height: 0.5rem;\n  display: flex;\n  justify-content: center;\n  position: absolute;\n  transform: translate(0, 100%);\n`;\n\nconst Arrow = styled.div`\n  width: 0.5rem;\n  height: 0.5rem;\n  position: relative;\n  display: flex;\n  justify-content: center;\n  left: -0.25rem;\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    border-left: 9px solid transparent;\n    border-right: 9px solid transparent;\n    border-top: 9px solid #dfdfdf;\n  }\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 1px;\n    border-left: 8px solid transparent;\n    border-right: 8px solid transparent;\n    border-top: 8px solid #fff;\n  }\n`;\n\nconst formatValue = (value: number) => {\n  return parseFloat((value).toFixed(1)) + '%';\n}\n\nconst BostonNewYork3Digit = () => {\n  const [hovered, setHovered] = useState<RowHoverEvent | undefined>(undefined);\n\n  let tooltip: React.ReactElement<any> | null;\n  if (hovered && hovered.datum) {\n    const {datum, mouseCoords} = hovered;\n    const bostonDatum = bostonData.find(d => d.id === datum.id);\n    const newYorkDatum = newYorkData.find(d => d.id === datum.id);\n    const newYorkValue = newYorkDatum ? newYorkDatum.value / newYorkTotal * 100 : 0;\n    const bostonValue = bostonDatum ? bostonDatum.value / bostonTotal * 100 : 0;\n    const nyDiff = newYorkValue > bostonValue ? '+' + datum.value.toFixed(2) + '%' : '';\n    const bosDiff = bostonValue > newYorkValue ? '+' + datum.value.toFixed(2) + '%' : '';\n    tooltip = (\n      <Tooltip\n        style={{left: mouseCoords.x, top: mouseCoords.y}}\n      >\n        <TooltipTitle style={{backgroundColor: rgba(datum.color, 0.3)}}>\n          {datum.title}\n        </TooltipTitle>\n        <TooltipSubsectionGrid>\n          <div />\n          <SemiBold>New York</SemiBold>\n          <SemiBold>Boston</SemiBold>\n          <Cell>Share of Employees</Cell>\n          <SemiBold>{newYorkValue.toFixed(2) + '%'}</SemiBold>\n          <SemiBold>{bostonValue.toFixed(2) + '%'}</SemiBold>\n          <Cell>Difference</Cell>\n          <SemiBold>{nyDiff}</SemiBold>\n          <SemiBold>{bosDiff}</SemiBold>\n        </TooltipSubsectionGrid>\n        <ArrowContainer>\n          <Arrow />\n        </ArrowContainer>\n      </Tooltip>\n    );\n  } else {\n    tooltip = null;\n  }\n\n  const titleFormatter = (label: string, count: number, max: number) => {\n    const countText = count === max ? '' : `(Top ${count})`;\n    return `Positive ${label} share (%) ${countText}`;\n  }\n\n  return (\n    <Root>\n      <ComparisonBarChart\n        primaryData={sharesDataBoston}\n        secondaryData={sharesDataNewYork}\n        nValuesToShow={10}\n        formatValue={formatValue}\n        titles={{\n          primary: 'Boston',\n          secondary: 'New York',\n          format: titleFormatter,\n        }}\n        expandCollapseText={{\n          toExpand: 'Click to see all industries',\n          toCollapse: 'Show only top industries',\n        }}\n        axisLabel={'Difference in Share'}\n        onRowHover={e => setHovered(e)}\n      />\n      {tooltip}\n    </Root>\n  )\n}\n\nexport default BostonNewYork3Digit;\n","import styled from 'styled-components/macro';\n\ninterface Input {\n  title: string;\n  color: string;\n  rows: string[][];\n  boldColumns?: number[];\n}\n\nexport const RapidTooltipRoot = styled.div`\n  position: fixed;\n  z-index: 3000;\n  max-width: 16rem;\n  padding-bottom: 0.5rem;\n  font-size: 0.7rem;\n  line-height: 1.4;\n  text-transform: none;\n  transition: opacity 0.15s ease;\n  color: #333;\n  background-color: #fff;\n  border: 1px solid #dfdfdf;\n  border-radius: 4px;\n  box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.15);\n  pointer-events: none;\n  transform: translate(-50%, calc(-100% - 1.5rem));\n  display: none;\n`;\n\nexport const getStandardTooltip = (input: Input) => {\n  const columnCount = input.rows.length && input.rows[0].length ? input.rows[0].length : 1;\n\n  let rows: string = '';\n  input.rows.forEach(r => {\n    let row = '';\n    r.forEach((c, i) => {\n      const alignment = i === 0\n        ? 'justify-content: flex-start; text-align: left;'\n        : 'justify-content: flex-end; text-align: right;';\n      const style = input.boldColumns && input.boldColumns.includes(i)\n        ? `style=\"font-weight: 600;${alignment}\"` : '';\n      row = row + `<div class=\"rapid-tooltip-cell\" ${style}>${c}</div>`;\n    });\n    rows = rows + row;\n  });\n\n  return `\n    <div>\n      <div class=\"rapid-tooltip-title\" style=\"background-color: ${input.color};\">\n        ${input.title}\n      </div>\n      <div\n        class=\"rapid-tooltip-subsection-grid\"\n        style=\"display: grid; grid-template-columns: repeat(${columnCount}, auto);\"\n      >\n        ${rows}\n      </div>\n    </div>\n    <div class=\"rapid-tooltip-arrow-container\">\n      <div class=\"rapid-tooltip-arrow\"></div>\n    </div>\n  `;\n};","import React, {useRef} from 'react';\nimport ComparisonBarChart, {\n  BarDatum,\n  RowHoverEvent,\n} from 'react-comparison-bar-chart';\nimport styled from 'styled-components/macro';\nimport raw from 'raw.macro';\nimport {rgba} from 'polished';\nimport {getStandardTooltip, RapidTooltipRoot} from './rapidTooltip';\n\nconst primaryTotal = 169706;\nconst secondaryTotal = 57741;\n\ninterface FilteredDatum {\n  id: string;\n  title: string;\n  value: number;\n  color: string;\n  topLevelParentId: string;\n}\n\nconst {\n  filteredPrimaryData, filteredSecondaryData,\n}: {\n  filteredPrimaryData: FilteredDatum[], filteredSecondaryData: FilteredDatum[],\n} = JSON.parse(raw('../data/boston-aracaju-6-digit-data.json'));\n\nconst primaryData: BarDatum[] = [];\nconst secondaryData: BarDatum[] = [];\n  filteredPrimaryData.forEach(d => {\n    const secondaryDatum = filteredSecondaryData.find(d2 => d2.id === d.id);\n    const primaryShare = d.value / primaryTotal;\n    const secondaryShare = secondaryDatum ? secondaryDatum.value / secondaryTotal : 0;\n    const difference = primaryShare - secondaryShare;\n    if (difference > 0) {\n      primaryData.push({...d, value: difference * 100});\n    }\n  });\n  filteredSecondaryData.forEach(d => {\n    const primaryDatum = filteredPrimaryData.find(d2 => d2.id === d.id);\n    const secondaryShare = d.value / secondaryTotal;\n    const primaryShare = primaryDatum ? primaryDatum.value / primaryTotal : 0;\n    const difference = secondaryShare - primaryShare;\n    if (difference > 0) {\n      secondaryData.push({...d, value: difference * 100});\n    }\n  });\n\nconst Root = styled.div`\n  width: 100vw;\n  height: 100vh;\n  box-sizing: border-box;\n  padding: 3rem;\n\n  @media (max-width: 720px) {\n    padding: 0.75rem;\n  }\n`;\n\nconst formatValue = (value: number) => {\n  return parseFloat((value).toFixed(1)) + '%';\n}\n\nconst BostonNewYork3Digit = () => {\n  const tooltipRef = useRef<HTMLDivElement | null>(null);\n\n  const setHovered = (e: RowHoverEvent | undefined) => {\n    const node = tooltipRef.current;\n    if (node) {\n      if (e && e.datum) {\n        const {datum, mouseCoords} = e;\n        const primaryDatum = filteredPrimaryData.find(d => d.id === datum.id);\n        const secondaryDatum = filteredSecondaryData.find(d => d.id === datum.id);\n        const secondaryValue = secondaryDatum ? secondaryDatum.value / secondaryTotal * 100 : 0;\n        const primaryValue = primaryDatum ? primaryDatum.value / primaryTotal * 100 : 0;\n        const primaryDiff = primaryValue > secondaryValue ? '+' + datum.value.toFixed(2) + '%' : '';\n        const secondaryDiff = secondaryValue > primaryValue ? '+' + datum.value.toFixed(2) + '%' : '';\n        node.innerHTML = getStandardTooltip({\n          title: datum.title,\n          color: rgba(datum.color, 0.3),\n          rows: [\n            ['', 'Aracaju', 'Boston'],\n            ['Share of Employees', secondaryValue.toFixed(2) + '%', primaryValue.toFixed(2) + '%'],\n            ['Difference', secondaryDiff, primaryDiff],\n          ],\n          boldColumns: [1, 2],\n        });\n        node.style.top = mouseCoords.y + 'px';\n        node.style.left = mouseCoords.x + 'px';\n        node.style.display = 'block';\n      } else {\n        node.style.display = 'none';\n      }\n    }\n  };\n\n  const titleFormatter = (label: string, count: number, max: number) => {\n    const countText = count === max ? '' : `(Top ${count})`;\n    return `Positive ${label} share (%) ${countText}`;\n  }\n\n  return (\n    <Root>\n      <ComparisonBarChart\n        primaryData={primaryData}\n        secondaryData={secondaryData}\n        nValuesToShow={10}\n        formatValue={formatValue}\n        titles={{\n          primary: 'Boston',\n          secondary: 'Aracaju',\n          format: titleFormatter,\n        }}\n        expandCollapseText={{\n          toExpand: 'Click to see all industries',\n          toCollapse: 'Show only top industries',\n        }}\n        axisLabel={'Difference in Share'}\n        onRowHover={e => setHovered(e)}\n      />\n      <RapidTooltipRoot ref={tooltipRef} />\n    </Root>\n  )\n}\n\nexport default BostonNewYork3Digit;\n","import React, {useRef} from 'react';\nimport ComparisonBarChart, {\n  BarDatum,\n  RowHoverEvent,\n} from 'react-comparison-bar-chart';\nimport styled from 'styled-components/macro';\nimport raw from 'raw.macro';\nimport {rgba} from 'polished';\nimport {getStandardTooltip, RapidTooltipRoot} from './rapidTooltip';\n\nconst primaryTotal = 169706;\nconst secondaryTotal = 57741;\n\ninterface FilteredDatum {\n  id: string;\n  title: string;\n  value: number;\n  color: string;\n  topLevelParentId: string;\n}\n\nconst {\n  filteredPrimaryData, filteredSecondaryData,\n}: {\n  filteredPrimaryData: FilteredDatum[], filteredSecondaryData: FilteredDatum[],\n} = JSON.parse(raw('../data/boston-aracaju-2-digit-data.json'));\n\nconst primaryData: BarDatum[] = [];\nconst secondaryData: BarDatum[] = [];\n  filteredPrimaryData.forEach(d => {\n    const secondaryDatum = filteredSecondaryData.find(d2 => d2.id === d.id);\n    const primaryShare = d.value / primaryTotal;\n    const secondaryShare = secondaryDatum ? secondaryDatum.value / secondaryTotal : 0;\n    const difference = primaryShare - secondaryShare;\n    if (difference > 0) {\n      primaryData.push({...d, value: difference * 100});\n    }\n  });\n  filteredSecondaryData.forEach(d => {\n    const primaryDatum = filteredPrimaryData.find(d2 => d2.id === d.id);\n    const secondaryShare = d.value / secondaryTotal;\n    const primaryShare = primaryDatum ? primaryDatum.value / primaryTotal : 0;\n    const difference = secondaryShare - primaryShare;\n    if (difference > 0) {\n      secondaryData.push({...d, value: difference * 100});\n    }\n  });\n\nconst Root = styled.div`\n  width: 100vw;\n  height: 100vh;\n  box-sizing: border-box;\n  padding: 3rem;\n\n  @media (max-width: 720px) {\n    padding: 0.75rem;\n  }\n`;\n\nconst formatValue = (value: number) => {\n  return parseFloat((value).toFixed(1)) + '%';\n}\n\nconst BostonNewYork3Digit = () => {\n  const tooltipRef = useRef<HTMLDivElement | null>(null);\n\n  const setHovered = (e: RowHoverEvent | undefined) => {\n    const node = tooltipRef.current;\n    if (node) {\n      if (e && e.datum) {\n        const {datum, mouseCoords} = e;\n        const primaryDatum = filteredPrimaryData.find(d => d.id === datum.id);\n        const secondaryDatum = filteredSecondaryData.find(d => d.id === datum.id);\n        const secondaryValue = secondaryDatum ? secondaryDatum.value / secondaryTotal * 100 : 0;\n        const primaryValue = primaryDatum ? primaryDatum.value / primaryTotal * 100 : 0;\n        const primaryDiff = primaryValue > secondaryValue ? '+' + datum.value.toFixed(2) + '%' : '';\n        const secondaryDiff = secondaryValue > primaryValue ? '+' + datum.value.toFixed(2) + '%' : '';\n        node.innerHTML = getStandardTooltip({\n          title: datum.title,\n          color: rgba(datum.color, 0.3),\n          rows: [\n            ['', 'Aracaju', 'Boston'],\n            ['Share of Employees', secondaryValue.toFixed(2) + '%', primaryValue.toFixed(2) + '%'],\n            ['Difference', secondaryDiff, primaryDiff],\n          ],\n          boldColumns: [1, 2],\n        });\n        node.style.top = mouseCoords.y + 'px';\n        node.style.left = mouseCoords.x + 'px';\n        node.style.display = 'block';\n      } else {\n        node.style.display = 'none';\n      }\n    }\n  };\n\n  const titleFormatter = (label: string, count: number, max: number) => {\n    const countText = count === max ? '' : `(Top ${count})`;\n    return `Positive ${label} share (%) ${countText}`;\n  }\n\n  return (\n    <Root>\n      <ComparisonBarChart\n        primaryData={primaryData}\n        secondaryData={secondaryData}\n        nValuesToShow={10}\n        formatValue={formatValue}\n        titles={{\n          primary: 'Boston',\n          secondary: 'Aracaju',\n          format: titleFormatter,\n        }}\n        expandCollapseText={{\n          toExpand: 'Click to see all industries',\n          toCollapse: 'Show only top industries',\n        }}\n        axisLabel={'Difference in Share'}\n        onRowHover={e => setHovered(e)}\n      />\n      <RapidTooltipRoot ref={tooltipRef} />\n    </Root>\n  )\n}\n\nexport default BostonNewYork3Digit;\n","import React, {useRef} from 'react';\nimport ComparisonBarChart, {\n  BarDatum,\n  RowHoverEvent,\n} from 'react-comparison-bar-chart';\nimport styled from 'styled-components/macro';\nimport raw from 'raw.macro';\nimport {rgba} from 'polished';\nimport {getStandardTooltip, RapidTooltipRoot} from './rapidTooltip';\n\nconst primaryTotal = 169706;\nconst secondaryTotal = 57741;\n\ninterface FilteredDatum {\n  id: string;\n  title: string;\n  value: number;\n  color: string;\n  topLevelParentId: string;\n}\n\nconst {\n  filteredPrimaryData, filteredSecondaryData,\n}: {\n  filteredPrimaryData: FilteredDatum[], filteredSecondaryData: FilteredDatum[],\n} = JSON.parse(raw('../data/boston-aracaju-1-digit-data.json'));\n\nconst primaryData: BarDatum[] = [];\nconst secondaryData: BarDatum[] = [];\n  filteredPrimaryData.forEach(d => {\n    const secondaryDatum = filteredSecondaryData.find(d2 => d2.id === d.id);\n    const primaryShare = d.value / primaryTotal;\n    const secondaryShare = secondaryDatum ? secondaryDatum.value / secondaryTotal : 0;\n    const difference = primaryShare - secondaryShare;\n    if (difference > 0) {\n      primaryData.push({...d, value: difference * 100});\n    }\n  });\n  filteredSecondaryData.forEach(d => {\n    const primaryDatum = filteredPrimaryData.find(d2 => d2.id === d.id);\n    const secondaryShare = d.value / secondaryTotal;\n    const primaryShare = primaryDatum ? primaryDatum.value / primaryTotal : 0;\n    const difference = secondaryShare - primaryShare;\n    if (difference > 0) {\n      secondaryData.push({...d, value: difference * 100});\n    }\n  });\n\nconst Root = styled.div`\n  width: 100vw;\n  height: 100vh;\n  box-sizing: border-box;\n  padding: 3rem;\n\n  @media (max-width: 720px) {\n    padding: 0.75rem;\n  }\n`;\n\nconst formatValue = (value: number) => {\n  return parseFloat((value).toFixed(1)) + '%';\n}\n\nconst BostonNewYork3Digit = () => {\n  const tooltipRef = useRef<HTMLDivElement | null>(null);\n\n  const setHovered = (e: RowHoverEvent | undefined) => {\n    const node = tooltipRef.current;\n    if (node) {\n      if (e && e.datum) {\n        const {datum, mouseCoords} = e;\n        const primaryDatum = filteredPrimaryData.find(d => d.id === datum.id);\n        const secondaryDatum = filteredSecondaryData.find(d => d.id === datum.id);\n        const secondaryValue = secondaryDatum ? secondaryDatum.value / secondaryTotal * 100 : 0;\n        const primaryValue = primaryDatum ? primaryDatum.value / primaryTotal * 100 : 0;\n        const primaryDiff = primaryValue > secondaryValue ? '+' + datum.value.toFixed(2) + '%' : '';\n        const secondaryDiff = secondaryValue > primaryValue ? '+' + datum.value.toFixed(2) + '%' : '';\n        node.innerHTML = getStandardTooltip({\n          title: datum.title,\n          color: rgba(datum.color, 0.3),\n          rows: [\n            ['', 'Aracaju', 'Boston'],\n            ['Share of Employees', secondaryValue.toFixed(2) + '%', primaryValue.toFixed(2) + '%'],\n            ['Difference', secondaryDiff, primaryDiff],\n          ],\n          boldColumns: [1, 2],\n        });\n        node.style.top = mouseCoords.y + 'px';\n        node.style.left = mouseCoords.x + 'px';\n        node.style.display = 'block';\n      } else {\n        node.style.display = 'none';\n      }\n    }\n  };\n\n  const titleFormatter = (label: string, count: number, max: number) => {\n    const countText = count === max ? '' : `(Top ${count})`;\n    return `Positive ${label} share (%) ${countText}`;\n  }\n\n  return (\n    <Root>\n      <ComparisonBarChart\n        primaryData={primaryData}\n        secondaryData={secondaryData}\n        nValuesToShow={10}\n        formatValue={formatValue}\n        titles={{\n          primary: 'Boston',\n          secondary: 'Aracaju',\n          format: titleFormatter,\n        }}\n        expandCollapseText={{\n          toExpand: 'Click to see all industries',\n          toCollapse: 'Show only top industries',\n        }}\n        axisLabel={'Difference in Share'}\n        onRowHover={e => setHovered(e)}\n      />\n      <RapidTooltipRoot ref={tooltipRef} />\n    </Root>\n  )\n}\n\nexport default BostonNewYork3Digit;\n","import React, {useRef} from 'react';\nimport ComparisonBarChart, {\n  BarDatum,\n  RowHoverEvent,\n} from 'react-comparison-bar-chart';\nimport styled from 'styled-components/macro';\nimport raw from 'raw.macro';\nimport {rgba} from 'polished';\nimport {getStandardTooltip, RapidTooltipRoot} from './rapidTooltip';\n\nconst primaryTotal = 169706;\nconst secondaryTotal = 57741;\n\ninterface FilteredDatum {\n  id: string;\n  title: string;\n  value: number;\n  color: string;\n  topLevelParentId: string;\n}\n\nconst {\n  filteredPrimaryData, filteredSecondaryData,\n}: {\n  filteredPrimaryData: FilteredDatum[], filteredSecondaryData: FilteredDatum[],\n} = JSON.parse(raw('../data/boston-aracaju-services-only-data.json'));\n\nconst primaryData: BarDatum[] = [];\nconst secondaryData: BarDatum[] = [];\n  filteredPrimaryData.forEach(d => {\n    const secondaryDatum = filteredSecondaryData.find(d2 => d2.id === d.id);\n    const primaryShare = d.value / primaryTotal;\n    const secondaryShare = secondaryDatum ? secondaryDatum.value / secondaryTotal : 0;\n    const difference = primaryShare - secondaryShare;\n    if (difference > 0) {\n      primaryData.push({...d, value: difference * 100});\n    }\n  });\n  filteredSecondaryData.forEach(d => {\n    const primaryDatum = filteredPrimaryData.find(d2 => d2.id === d.id);\n    const secondaryShare = d.value / secondaryTotal;\n    const primaryShare = primaryDatum ? primaryDatum.value / primaryTotal : 0;\n    const difference = secondaryShare - primaryShare;\n    if (difference > 0) {\n      secondaryData.push({...d, value: difference * 100});\n    }\n  });\n\nconst Root = styled.div`\n  width: 100vw;\n  height: 100vh;\n  box-sizing: border-box;\n  padding: 3rem;\n\n  @media (max-width: 720px) {\n    padding: 0.75rem;\n  }\n`;\n\nconst formatValue = (value: number) => {\n  return parseFloat((value).toFixed(1)) + '%';\n}\n\nconst BostonNewYork3Digit = () => {\n  const tooltipRef = useRef<HTMLDivElement | null>(null);\n\n  const setHovered = (e: RowHoverEvent | undefined) => {\n    const node = tooltipRef.current;\n    if (node) {\n      if (e && e.datum) {\n        const {datum, mouseCoords} = e;\n        const primaryDatum = filteredPrimaryData.find(d => d.id === datum.id);\n        const secondaryDatum = filteredSecondaryData.find(d => d.id === datum.id);\n        const secondaryValue = secondaryDatum ? secondaryDatum.value / secondaryTotal * 100 : 0;\n        const primaryValue = primaryDatum ? primaryDatum.value / primaryTotal * 100 : 0;\n        const primaryDiff = primaryValue > secondaryValue ? '+' + datum.value.toFixed(2) + '%' : '';\n        const secondaryDiff = secondaryValue > primaryValue ? '+' + datum.value.toFixed(2) + '%' : '';\n        node.innerHTML = getStandardTooltip({\n          title: datum.title,\n          color: rgba(datum.color, 0.3),\n          rows: [\n            ['', 'Aracaju', 'Boston'],\n            ['Share of Employees', secondaryValue.toFixed(2) + '%', primaryValue.toFixed(2) + '%'],\n            ['Difference', secondaryDiff, primaryDiff],\n          ],\n          boldColumns: [1, 2],\n        });\n        node.style.top = mouseCoords.y + 'px';\n        node.style.left = mouseCoords.x + 'px';\n        node.style.display = 'block';\n      } else {\n        node.style.display = 'none';\n      }\n    }\n  };\n\n  const titleFormatter = (label: string, count: number, max: number) => {\n    const countText = count === max ? '' : `(Top ${count})`;\n    return `Positive ${label} share (%) ${countText}`;\n  }\n\n  return (\n    <Root>\n      <ComparisonBarChart\n        primaryData={primaryData}\n        secondaryData={secondaryData}\n        nValuesToShow={10}\n        formatValue={formatValue}\n        titles={{\n          primary: 'Boston',\n          secondary: 'Aracaju',\n          format: titleFormatter,\n        }}\n        expandCollapseText={{\n          toExpand: 'Click to see all industries',\n          toCollapse: 'Show only top industries',\n        }}\n        axisLabel={'Difference in Share'}\n        onRowHover={e => setHovered(e)}\n      />\n      <RapidTooltipRoot ref={tooltipRef} />\n    </Root>\n  )\n}\n\nexport default BostonNewYork3Digit;\n","import React from 'react';\nimport BostonNewYork3Digit from './components/BostonNewYork3Digit';\nimport BostonAracaju6Digit from './components/BostonAracaju6Digit';\nimport BostonAracaju2Digit from './components/BostonAracaju2Digit';\nimport BostonAracaju1Digit from './components/BostonAracaju1Digit';\nimport BostonAracajuServicesOnly from './components/BostonAracajuServicesOnly';\nimport {\n  Route,\n  Switch,\n  HashRouter,\n} from 'react-router-dom';\n\nconst App = () => {\n\n  return (\n    <HashRouter>\n      <Switch>\n        <Route exact path={'/3-digit'} component={BostonNewYork3Digit} />\n        <Route exact path={'/6-digit'} component={BostonAracaju6Digit} />\n        <Route exact path={'/2-digit'} component={BostonAracaju2Digit} />\n        <Route exact path={'/1-digit'} component={BostonAracaju1Digit} />\n        <Route exact path={'/services-only'} component={BostonAracajuServicesOnly} />\n        <Route component={BostonNewYork3Digit} />\n      </Switch>\n    </HashRouter>\n  )\n}\n\nexport default App;\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}